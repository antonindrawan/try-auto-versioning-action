{"version":3,"file":"index.js","sources":["../webpack://typescript-action/./lib/main.js","../webpack://typescript-action/./node_modules/@actions/core/lib/command.js","../webpack://typescript-action/./node_modules/@actions/core/lib/core.js","../webpack://typescript-action/./node_modules/@actions/core/lib/file-command.js","../webpack://typescript-action/./node_modules/@actions/core/lib/utils.js","../webpack://typescript-action/./node_modules/@kwsites/file-exists/dist/index.js","../webpack://typescript-action/./node_modules/@kwsites/file-exists/dist/src/index.js","../webpack://typescript-action/./node_modules/@kwsites/promise-deferred/dist/index.js","../webpack://typescript-action/./node_modules/debug/src/browser.js","../webpack://typescript-action/./node_modules/debug/src/common.js","../webpack://typescript-action/./node_modules/debug/src/index.js","../webpack://typescript-action/./node_modules/debug/src/node.js","../webpack://typescript-action/./node_modules/has-flag/index.js","../webpack://typescript-action/./node_modules/lru-cache/index.js","../webpack://typescript-action/./node_modules/ms/index.js","../webpack://typescript-action/./node_modules/semver/classes/comparator.js","../webpack://typescript-action/./node_modules/semver/classes/range.js","../webpack://typescript-action/./node_modules/semver/classes/semver.js","../webpack://typescript-action/./node_modules/semver/functions/clean.js","../webpack://typescript-action/./node_modules/semver/functions/cmp.js","../webpack://typescript-action/./node_modules/semver/functions/coerce.js","../webpack://typescript-action/./node_modules/semver/functions/compare-build.js","../webpack://typescript-action/./node_modules/semver/functions/compare-loose.js","../webpack://typescript-action/./node_modules/semver/functions/compare.js","../webpack://typescript-action/./node_modules/semver/functions/diff.js","../webpack://typescript-action/./node_modules/semver/functions/eq.js","../webpack://typescript-action/./node_modules/semver/functions/gt.js","../webpack://typescript-action/./node_modules/semver/functions/gte.js","../webpack://typescript-action/./node_modules/semver/functions/inc.js","../webpack://typescript-action/./node_modules/semver/functions/lt.js","../webpack://typescript-action/./node_modules/semver/functions/lte.js","../webpack://typescript-action/./node_modules/semver/functions/major.js","../webpack://typescript-action/./node_modules/semver/functions/minor.js","../webpack://typescript-action/./node_modules/semver/functions/neq.js","../webpack://typescript-action/./node_modules/semver/functions/parse.js","../webpack://typescript-action/./node_modules/semver/functions/patch.js","../webpack://typescript-action/./node_modules/semver/functions/prerelease.js","../webpack://typescript-action/./node_modules/semver/functions/rcompare.js","../webpack://typescript-action/./node_modules/semver/functions/rsort.js","../webpack://typescript-action/./node_modules/semver/functions/satisfies.js","../webpack://typescript-action/./node_modules/semver/functions/sort.js","../webpack://typescript-action/./node_modules/semver/functions/valid.js","../webpack://typescript-action/./node_modules/semver/index.js","../webpack://typescript-action/./node_modules/semver/internal/constants.js","../webpack://typescript-action/./node_modules/semver/internal/debug.js","../webpack://typescript-action/./node_modules/semver/internal/identifiers.js","../webpack://typescript-action/./node_modules/semver/internal/parse-options.js","../webpack://typescript-action/./node_modules/semver/internal/re.js","../webpack://typescript-action/./node_modules/semver/ranges/gtr.js","../webpack://typescript-action/./node_modules/semver/ranges/intersects.js","../webpack://typescript-action/./node_modules/semver/ranges/ltr.js","../webpack://typescript-action/./node_modules/semver/ranges/max-satisfying.js","../webpack://typescript-action/./node_modules/semver/ranges/min-satisfying.js","../webpack://typescript-action/./node_modules/semver/ranges/min-version.js","../webpack://typescript-action/./node_modules/semver/ranges/outside.js","../webpack://typescript-action/./node_modules/semver/ranges/simplify.js","../webpack://typescript-action/./node_modules/semver/ranges/subset.js","../webpack://typescript-action/./node_modules/semver/ranges/to-comparators.js","../webpack://typescript-action/./node_modules/semver/ranges/valid.js","../webpack://typescript-action/./node_modules/simple-git/src/git.js","../webpack://typescript-action/./node_modules/simple-git/src/index.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/api.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/errors/git-construct-error.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/errors/git-error.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/errors/git-plugin-error.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/errors/git-response-error.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/errors/task-configuration-error.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/git-factory.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/git-logger.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-branch-delete.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-branch.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-commit.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-diff-summary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-fetch.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-list-log-summary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-merge.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-move.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-pull.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-push.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-remote-messages.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/parsers/parse-remote-objects.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/plugins/command-config-prefixing-plugin.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/plugins/error-detection.plugin.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/plugins/index.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/plugins/plugin-store.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/plugins/progress-monitor-plugin.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/plugins/simple-git-plugin.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/plugins/timout-plugin.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/BranchDeleteSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/BranchSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/CheckIgnore.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/CleanSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/ConfigList.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/DiffSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/FileStatusSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/GetRemoteSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/InitSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/MergeSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/PullSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/StatusSummary.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/responses/TagList.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/runners/git-executor-chain.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/runners/git-executor.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/runners/promise-wrapped.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/runners/scheduler.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/runners/tasks-pending-queue.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/simple-git-api.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/task-callback.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/apply-patch.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/branch.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/check-ignore.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/check-is-repo.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/clean.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/clone.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/commit.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/config.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/diff.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/fetch.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/hash-object.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/init.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/log.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/merge.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/move.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/pull.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/push.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/remote.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/reset.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/stash-list.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/status.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/sub-module.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/tag.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/tasks/task.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/argument-filters.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/exit-codes.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/git-output-streams.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/index.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/line-parser.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/simple-git-options.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/task-options.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/task-parser.js","../webpack://typescript-action/./node_modules/simple-git/src/lib/utils/util.js","../webpack://typescript-action/./node_modules/supports-color/index.js","../webpack://typescript-action/./node_modules/yallist/iterator.js","../webpack://typescript-action/./node_modules/yallist/yallist.js","../webpack://typescript-action/external \"child_process\"","../webpack://typescript-action/external \"fs\"","../webpack://typescript-action/external \"os\"","../webpack://typescript-action/external \"path\"","../webpack://typescript-action/external \"tty\"","../webpack://typescript-action/external \"util\"","../webpack://typescript-action/webpack/bootstrap","../webpack://typescript-action/webpack/runtime/compat","../webpack://typescript-action/webpack/startup"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core = __importStar(require(\"@actions/core\"));\nconst simple_git_1 = __importDefault(require(\"simple-git\"));\nconst semver_1 = require(\"semver\");\nfunction run() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const git = simple_git_1.default();\n            let version;\n            const tags = yield git.tags();\n            if (tags.latest === undefined) {\n                version = new semver_1.SemVer('0.0.1');\n                core.debug(version.format());\n            }\n            else {\n                version = new semver_1.SemVer(tags.latest);\n                version.inc('patch');\n            }\n            // add the tag\n            try {\n                const value = yield git.addTag(version.format());\n                core.debug(`addTag result: ${value['name']}`);\n                // push the tag\n                try {\n                    const pushResult = yield git.push('origin', value['name']);\n                    core.debug(`tag successfully pushed to ${String(pushResult)}`);\n                }\n                catch (error) {\n                    core.setFailed(error.message);\n                }\n            }\n            catch (error) {\n                core.setFailed(error.message);\n            }\n        }\n        catch (error) {\n            core.setFailed(error.message);\n        }\n    });\n}\nrun();\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n */\nfunction error(message) {\n    command_1.issue('error', message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n */\nfunction warning(message) {\n    command_1.issue('warning', message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst log = debug_1.default('@kwsites/file-exists');\nfunction check(path, isFile, isDirectory) {\n    log(`checking %s`, path);\n    try {\n        const stat = fs_1.statSync(path);\n        if (stat.isFile() && isFile) {\n            log(`[OK] path represents a file`);\n            return true;\n        }\n        if (stat.isDirectory() && isDirectory) {\n            log(`[OK] path represents a directory`);\n            return true;\n        }\n        log(`[FAIL] path represents something other than a file or directory`);\n        return false;\n    }\n    catch (e) {\n        if (e.code === 'ENOENT') {\n            log(`[FAIL] path is not accessible: %o`, e);\n            return false;\n        }\n        log(`[FATAL] %o`, e);\n        throw e;\n    }\n}\n/**\n * Synchronous validation of a path existing either as a file or as a directory.\n *\n * @param {string} path The path to check\n * @param {number} type One or both of the exported numeric constants\n */\nfunction exists(path, type = exports.READABLE) {\n    return check(path, (type & exports.FILE) > 0, (type & exports.FOLDER) > 0);\n}\nexports.exists = exists;\n/**\n * Constant representing a file\n */\nexports.FILE = 1;\n/**\n * Constant representing a folder\n */\nexports.FOLDER = 2;\n/**\n * Constant representing either a file or a folder\n */\nexports.READABLE = exports.FILE + exports.FOLDER;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDeferred = exports.deferred = void 0;\n/**\n * Creates a new `DeferredPromise`\n *\n * ```typescript\n import {deferred} from '@kwsites/promise-deferred`;\n ```\n */\nfunction deferred() {\n    let done;\n    let fail;\n    let status = 'pending';\n    const promise = new Promise((_done, _fail) => {\n        done = _done;\n        fail = _fail;\n    });\n    return {\n        promise,\n        done(result) {\n            if (status === 'pending') {\n                status = 'resolved';\n                done(result);\n            }\n        },\n        fail(error) {\n            if (status === 'pending') {\n                status = 'rejected';\n                fail(error);\n            }\n        },\n        get fulfilled() {\n            return status !== 'pending';\n        },\n        get status() {\n            return status;\n        },\n    };\n}\nexports.deferred = deferred;\n/**\n * Alias of the exported `deferred` function, to help consumers wanting to use `deferred` as the\n * local variable name rather than the factory import name, without needing to rename on import.\n *\n * ```typescript\n import {createDeferred} from '@kwsites/promise-deferred`;\n ```\n */\nexports.createDeferred = deferred;\n/**\n * Default export allows use as:\n *\n * ```typescript\n import deferred from '@kwsites/promise-deferred`;\n ```\n */\nexports.default = deferred;\n//# sourceMappingURL=index.js.map","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const {GitExecutor} = require('./lib/runners/git-executor');\nconst {SimpleGitApi} = require('./lib/simple-git-api');\n\nconst {Scheduler} = require('./lib/runners/scheduler');\nconst {GitLogger} = require('./lib/git-logger');\nconst {adhocExecTask, configurationErrorTask} = require('./lib/tasks/task');\nconst {\n   NOOP,\n   asArray,\n   filterArray,\n   filterPrimitives,\n   filterString,\n   filterStringOrStringArray,\n   filterType,\n   folderExists,\n   getTrailingOptions,\n   trailingFunctionArgument,\n   trailingOptionsArgument\n} = require('./lib/utils');\nconst {applyPatchTask} = require('./lib/tasks/apply-patch')\nconst {branchTask, branchLocalTask, deleteBranchesTask, deleteBranchTask} = require('./lib/tasks/branch');\nconst {checkIgnoreTask} = require('./lib/tasks/check-ignore');\nconst {checkIsRepoTask} = require('./lib/tasks/check-is-repo');\nconst {cloneTask, cloneMirrorTask} = require('./lib/tasks/clone');\nconst {addConfigTask, listConfigTask} = require('./lib/tasks/config');\nconst {cleanWithOptionsTask, isCleanOptionsArray} = require('./lib/tasks/clean');\nconst {commitTask} = require('./lib/tasks/commit');\nconst {diffSummaryTask} = require('./lib/tasks/diff');\nconst {fetchTask} = require('./lib/tasks/fetch');\nconst {hashObjectTask} = require('./lib/tasks/hash-object');\nconst {initTask} = require('./lib/tasks/init');\nconst {logTask, parseLogOptions} = require('./lib/tasks/log');\nconst {mergeTask} = require('./lib/tasks/merge');\nconst {moveTask} = require(\"./lib/tasks/move\");\nconst {pullTask} = require('./lib/tasks/pull');\nconst {pushTagsTask} = require('./lib/tasks/push');\nconst {addRemoteTask, getRemotesTask, listRemotesTask, remoteTask, removeRemoteTask} = require('./lib/tasks/remote');\nconst {getResetMode, resetTask} = require('./lib/tasks/reset');\nconst {stashListTask} = require('./lib/tasks/stash-list');\nconst {statusTask} = require('./lib/tasks/status');\nconst {addSubModuleTask, initSubModuleTask, subModuleTask, updateSubModuleTask} = require('./lib/tasks/sub-module');\nconst {addAnnotatedTagTask, addTagTask, tagListTask} = require('./lib/tasks/tag');\nconst {straightThroughBufferTask, straightThroughStringTask} = require('./lib/tasks/task');\n\nfunction Git (options, plugins) {\n   this._executor = new GitExecutor(\n      options.binary, options.baseDir,\n      new Scheduler(options.maxConcurrentProcesses), plugins,\n   );\n   this._logger = new GitLogger();\n}\n\n(Git.prototype = Object.create(SimpleGitApi.prototype)).constructor = Git;\n\n/**\n * Logging utility for printing out info or error messages to the user\n * @type {GitLogger}\n * @private\n */\nGit.prototype._logger = null;\n\n/**\n * Sets the path to a custom git binary, should either be `git` when there is an installation of git available on\n * the system path, or a fully qualified path to the executable.\n *\n * @param {string} command\n * @returns {Git}\n */\nGit.prototype.customBinary = function (command) {\n   this._executor.binary = command;\n   return this;\n};\n\n/**\n * Sets an environment variable for the spawned child process, either supply both a name and value as strings or\n * a single object to entirely replace the current environment variables.\n *\n * @param {string|Object} name\n * @param {string} [value]\n * @returns {Git}\n */\nGit.prototype.env = function (name, value) {\n   if (arguments.length === 1 && typeof name === 'object') {\n      this._executor.env = name;\n   } else {\n      (this._executor.env = this._executor.env || {})[name] = value;\n   }\n\n   return this;\n};\n\n/**\n * Sets the working directory of the subsequent commands.\n */\nGit.prototype.cwd = function (workingDirectory) {\n   const task = (typeof workingDirectory !== 'string')\n      ? configurationErrorTask('Git.cwd: workingDirectory must be supplied as a string')\n      : adhocExecTask(() => {\n         if (!folderExists(workingDirectory)) {\n            throw new Error(`Git.cwd: cannot change to non-directory \"${ workingDirectory }\"`);\n         }\n\n         return (this._executor.cwd = workingDirectory);\n      });\n\n   return this._runTask(task, trailingFunctionArgument(arguments) || NOOP);\n};\n\n/**\n * Sets a handler function to be called whenever a new child process is created, the handler function will be called\n * with the name of the command being run and the stdout & stderr streams used by the ChildProcess.\n *\n * @example\n * require('simple-git')\n *    .outputHandler(function (command, stdout, stderr) {\n *       stdout.pipe(process.stdout);\n *    })\n *    .checkout('https://github.com/user/repo.git');\n *\n * @see https://nodejs.org/api/child_process.html#child_process_class_childprocess\n * @see https://nodejs.org/api/stream.html#stream_class_stream_readable\n * @param {Function} outputHandler\n * @returns {Git}\n */\nGit.prototype.outputHandler = function (outputHandler) {\n   this._executor.outputHandler = outputHandler;\n   return this;\n};\n\n/**\n * Initialize a git repo\n *\n * @param {Boolean} [bare=false]\n * @param {Function} [then]\n */\nGit.prototype.init = function (bare, then) {\n   return this._runTask(\n      initTask(bare === true, this._executor.cwd, getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Check the status of the local repo\n */\nGit.prototype.status = function () {\n   return this._runTask(\n      statusTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * List the stash(s) of the local repo\n */\nGit.prototype.stashList = function (options) {\n   return this._runTask(\n      stashListTask(\n         trailingOptionsArgument(arguments) || {},\n         filterArray(options) && options || []\n      ),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Stash the local repo\n *\n * @param {Object|Array} [options]\n * @param {Function} [then]\n */\nGit.prototype.stash = function (options, then) {\n   return this._runTask(\n      straightThroughStringTask(['stash', ...getTrailingOptions(arguments)]),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nfunction createCloneTask (api, task, repoPath, localPath) {\n   if (typeof repoPath !== 'string') {\n      return configurationErrorTask(`git.${ api }() requires a string 'repoPath'`);\n   }\n\n   return task(repoPath, filterType(localPath, filterString), getTrailingOptions(arguments));\n}\n\n\n/**\n * Clone a git repo\n */\nGit.prototype.clone = function () {\n   return this._runTask(\n      createCloneTask('clone', cloneTask, ...arguments),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Mirror a git repo\n */\nGit.prototype.mirror = function () {\n   return this._runTask(\n      createCloneTask('mirror', cloneMirrorTask, ...arguments),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Moves one or more files to a new destination.\n *\n * @see https://git-scm.com/docs/git-mv\n *\n * @param {string|string[]} from\n * @param {string} to\n */\nGit.prototype.mv = function (from, to) {\n   return this._runTask(moveTask(from, to), trailingFunctionArgument(arguments));\n};\n\n/**\n * Internally uses pull and tags to get the list of tags then checks out the latest tag.\n *\n * @param {Function} [then]\n */\nGit.prototype.checkoutLatestTag = function (then) {\n   var git = this;\n   return this.pull(function () {\n      git.tags(function (err, tags) {\n         git.checkout(tags.latest, then);\n      });\n   });\n};\n\n/**\n * Commits changes in the current working directory - when specific file paths are supplied, only changes on those\n * files will be committed.\n *\n * @param {string|string[]} message\n * @param {string|string[]} [files]\n * @param {Object} [options]\n * @param {Function} [then]\n */\nGit.prototype.commit = function (message, files, options, then) {\n   const next = trailingFunctionArgument(arguments);\n   const messages = [];\n\n   if (filterStringOrStringArray(message)) {\n      messages.push(...asArray(message));\n   } else {\n      console.warn('simple-git deprecation notice: git.commit: requires the commit message to be supplied as a string/string[], this will be an error in version 3');\n   }\n\n   return this._runTask(\n      commitTask(\n         messages,\n         asArray(filterType(files, filterStringOrStringArray, [])),\n         [...filterType(options, filterArray, []), ...getTrailingOptions(arguments, 0, true)]\n      ),\n      next\n   );\n};\n\n/**\n * Pull the updated contents of the current repo\n */\nGit.prototype.pull = function (remote, branch, options, then) {\n   return this._runTask(\n      pullTask(filterType(remote, filterString), filterType(branch, filterString), getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Fetch the updated contents of the current repo.\n *\n * @example\n *   .fetch('upstream', 'master') // fetches from master on remote named upstream\n *   .fetch(function () {}) // runs fetch against default remote and branch and calls function\n *\n * @param {string} [remote]\n * @param {string} [branch]\n */\nGit.prototype.fetch = function (remote, branch) {\n   return this._runTask(\n      fetchTask(filterType(remote, filterString), filterType(branch, filterString), getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Disables/enables the use of the console for printing warnings and errors, by default messages are not shown in\n * a production environment.\n *\n * @param {boolean} silence\n * @returns {Git}\n */\nGit.prototype.silent = function (silence) {\n   console.warn('simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3');\n   this._logger.silent(!!silence);\n   return this;\n};\n\n/**\n * List all tags. When using git 2.7.0 or above, include an options object with `\"--sort\": \"property-name\"` to\n * sort the tags by that property instead of using the default semantic versioning sort.\n *\n * Note, supplying this option when it is not supported by your Git version will cause the operation to fail.\n *\n * @param {Object} [options]\n * @param {Function} [then]\n */\nGit.prototype.tags = function (options, then) {\n   return this._runTask(\n      tagListTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Rebases the current working copy. Options can be supplied either as an array of string parameters\n * to be sent to the `git rebase` command, or a standard options object.\n */\nGit.prototype.rebase = function () {\n   return this._runTask(\n      straightThroughStringTask(['rebase', ...getTrailingOptions(arguments)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Reset a repo\n */\nGit.prototype.reset = function (mode) {\n   return this._runTask(\n      resetTask(getResetMode(mode), getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Revert one or more commits in the local working copy\n */\nGit.prototype.revert = function (commit) {\n   const next = trailingFunctionArgument(arguments);\n\n   if (typeof commit !== 'string') {\n      return this._runTask(\n         configurationErrorTask('Commit must be a string'),\n         next,\n      );\n   }\n\n   return this._runTask(\n      straightThroughStringTask(['revert', ...getTrailingOptions(arguments, 0, true), commit]),\n      next\n   );\n};\n\n/**\n * Add a lightweight tag to the head of the current branch\n */\nGit.prototype.addTag = function (name) {\n   const task = (typeof name === 'string')\n      ? addTagTask(name)\n      : configurationErrorTask('Git.addTag requires a tag name');\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\n/**\n * Add an annotated tag to the head of the current branch\n */\nGit.prototype.addAnnotatedTag = function (tagName, tagMessage) {\n   return this._runTask(\n      addAnnotatedTagTask(tagName, tagMessage),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Check out a tag or revision, any number of additional arguments can be passed to the `git checkout` command\n * by supplying either a string or array of strings as the first argument.\n */\nGit.prototype.checkout = function () {\n   const commands = ['checkout', ...getTrailingOptions(arguments, true)];\n   return this._runTask(\n      straightThroughStringTask(commands),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Check out a remote branch\n *\n * @param {string} branchName name of branch\n * @param {string} startPoint (e.g origin/development)\n * @param {Function} [then]\n */\nGit.prototype.checkoutBranch = function (branchName, startPoint, then) {\n   return this.checkout(['-b', branchName, startPoint], trailingFunctionArgument(arguments));\n};\n\n/**\n * Check out a local branch\n */\nGit.prototype.checkoutLocalBranch = function (branchName, then) {\n   return this.checkout(['-b', branchName], trailingFunctionArgument(arguments));\n};\n\n/**\n * Delete a local branch\n */\nGit.prototype.deleteLocalBranch = function (branchName, forceDelete, then) {\n   return this._runTask(\n      deleteBranchTask(branchName, typeof forceDelete === \"boolean\" ? forceDelete : false),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Delete one or more local branches\n */\nGit.prototype.deleteLocalBranches = function (branchNames, forceDelete, then) {\n   return this._runTask(\n      deleteBranchesTask(branchNames, typeof forceDelete === \"boolean\" ? forceDelete : false),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * List all branches\n *\n * @param {Object | string[]} [options]\n * @param {Function} [then]\n */\nGit.prototype.branch = function (options, then) {\n   return this._runTask(\n      branchTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Return list of local branches\n *\n * @param {Function} [then]\n */\nGit.prototype.branchLocal = function (then) {\n   return this._runTask(\n      branchLocalTask(),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Add config to local git instance\n *\n * @param {string} key configuration key (e.g user.name)\n * @param {string} value for the given key (e.g your name)\n * @param {boolean} [append=false] optionally append the key/value pair (equivalent of passing `--add` option).\n * @param {Function} [then]\n */\nGit.prototype.addConfig = function (key, value, append, then) {\n   return this._runTask(\n      addConfigTask(key, value, typeof append === \"boolean\" ? append : false),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.listConfig = function () {\n   return this._runTask(listConfigTask(), trailingFunctionArgument(arguments));\n};\n\n/**\n * Executes any command against the git binary.\n */\nGit.prototype.raw = function (commands) {\n   const createRestCommands = !Array.isArray(commands);\n   const command = [].slice.call(createRestCommands ? arguments : commands, 0);\n\n   for (let i = 0; i < command.length && createRestCommands; i++) {\n      if (!filterPrimitives(command[i])) {\n         command.splice(i, command.length - i);\n         break;\n      }\n   }\n\n   command.push(\n      ...getTrailingOptions(arguments, 0, true),\n   );\n\n   var next = trailingFunctionArgument(arguments);\n\n   if (!command.length) {\n      return this._runTask(\n         configurationErrorTask('Raw: must supply one or more command to execute'),\n         next,\n      );\n   }\n\n   return this._runTask(straightThroughStringTask(command), next);\n};\n\nGit.prototype.submoduleAdd = function (repo, path, then) {\n   return this._runTask(\n      addSubModuleTask(repo, path),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.submoduleUpdate = function (args, then) {\n   return this._runTask(\n      updateSubModuleTask(getTrailingOptions(arguments, true)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.submoduleInit = function (args, then) {\n   return this._runTask(\n      initSubModuleTask(getTrailingOptions(arguments, true)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.subModule = function (options, then) {\n   return this._runTask(\n      subModuleTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.listRemote = function () {\n   return this._runTask(\n      listRemotesTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Adds a remote to the list of remotes.\n */\nGit.prototype.addRemote = function (remoteName, remoteRepo, then) {\n   return this._runTask(\n      addRemoteTask(remoteName, remoteRepo, getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Removes an entry by name from the list of remotes.\n */\nGit.prototype.removeRemote = function (remoteName, then) {\n   return this._runTask(\n      removeRemoteTask(remoteName),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Gets the currently available remotes, setting the optional verbose argument to true includes additional\n * detail on the remotes themselves.\n */\nGit.prototype.getRemotes = function (verbose, then) {\n   return this._runTask(\n      getRemotesTask(verbose === true),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Compute object ID from a file\n */\nGit.prototype.hashObject = function (path, write) {\n   return this._runTask(\n      hashObjectTask(path, write === true),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Call any `git remote` function with arguments passed as an array of strings.\n *\n * @param {string[]} options\n * @param {Function} [then]\n */\nGit.prototype.remote = function (options, then) {\n   return this._runTask(\n      remoteTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Merges from one branch to another, equivalent to running `git merge ${from} $[to}`, the `options` argument can\n * either be an array of additional parameters to pass to the command or null / omitted to be ignored.\n *\n * @param {string} from\n * @param {string} to\n */\nGit.prototype.mergeFromTo = function (from, to) {\n   if (!(filterString(from) && filterString(to))) {\n      return this._runTask(configurationErrorTask(\n         `Git.mergeFromTo requires that the 'from' and 'to' arguments are supplied as strings`\n      ));\n   }\n\n   return this._runTask(\n      mergeTask([from, to, ...getTrailingOptions(arguments)]),\n      trailingFunctionArgument(arguments, false),\n   );\n};\n\n/**\n * Runs a merge, `options` can be either an array of arguments\n * supported by the [`git merge`](https://git-scm.com/docs/git-merge)\n * or an options object.\n *\n * Conflicts during the merge result in an error response,\n * the response type whether it was an error or success will be a MergeSummary instance.\n * When successful, the MergeSummary has all detail from a the PullSummary\n *\n * @param {Object | string[]} [options]\n * @param {Function} [then]\n * @returns {*}\n *\n * @see ./responses/MergeSummary.js\n * @see ./responses/PullSummary.js\n */\nGit.prototype.merge = function () {\n   return this._runTask(\n      mergeTask(getTrailingOptions(arguments)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Call any `git tag` function with arguments passed as an array of strings.\n *\n * @param {string[]} options\n * @param {Function} [then]\n */\nGit.prototype.tag = function (options, then) {\n   const command = getTrailingOptions(arguments);\n\n   if (command[0] !== 'tag') {\n      command.unshift('tag');\n   }\n\n   return this._runTask(\n      straightThroughStringTask(command),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Updates repository server info\n *\n * @param {Function} [then]\n */\nGit.prototype.updateServerInfo = function (then) {\n   return this._runTask(\n      straightThroughStringTask(['update-server-info']),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Pushes the current tag changes to a remote which can be either a URL or named remote. When not specified uses the\n * default configured remote spec.\n *\n * @param {string} [remote]\n * @param {Function} [then]\n */\nGit.prototype.pushTags = function (remote, then) {\n   const task = pushTagsTask({remote: filterType(remote, filterString)}, getTrailingOptions(arguments));\n\n   return this._runTask(task, trailingFunctionArgument(arguments));\n};\n\n/**\n * Removes the named files from source control.\n */\nGit.prototype.rm = function (files) {\n   return this._runTask(\n      straightThroughStringTask(['rm', '-f', ...asArray(files)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Removes the named files from source control but keeps them on disk rather than deleting them entirely. To\n * completely remove the files, use `rm`.\n *\n * @param {string|string[]} files\n */\nGit.prototype.rmKeepLocal = function (files) {\n   return this._runTask(\n      straightThroughStringTask(['rm', '--cached', ...asArray(files)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n * Returns a list of objects in a tree based on commit hash. Passing in an object hash returns the object's content,\n * size, and type.\n *\n * Passing \"-p\" will instruct cat-file to determine the object type, and display its formatted contents.\n *\n * @param {string[]} [options]\n * @param {Function} [then]\n */\nGit.prototype.catFile = function (options, then) {\n   return this._catFile('utf-8', arguments);\n};\n\nGit.prototype.binaryCatFile = function () {\n   return this._catFile('buffer', arguments);\n};\n\nGit.prototype._catFile = function (format, args) {\n   var handler = trailingFunctionArgument(args);\n   var command = ['cat-file'];\n   var options = args[0];\n\n   if (typeof options === 'string') {\n      return this._runTask(\n         configurationErrorTask('Git.catFile: options must be supplied as an array of strings'),\n         handler,\n      );\n   }\n\n   if (Array.isArray(options)) {\n      command.push.apply(command, options);\n   }\n\n   const task = format === 'buffer'\n      ? straightThroughBufferTask(command)\n      : straightThroughStringTask(command);\n\n   return this._runTask(task, handler);\n};\n\nGit.prototype.diff = function (options, then) {\n   const command = ['diff', ...getTrailingOptions(arguments)];\n\n   if (typeof options === 'string') {\n      command.splice(1, 0, options);\n      this._logger.warn('Git#diff: supplying options as a single string is now deprecated, switch to an array of strings');\n   }\n\n   return this._runTask(\n      straightThroughStringTask(command),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.diffSummary = function () {\n   return this._runTask(\n      diffSummaryTask(getTrailingOptions(arguments, 1)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.applyPatch = function (patches) {\n   const task = !filterStringOrStringArray(patches)\n      ? configurationErrorTask(`git.applyPatch requires one or more string patches as the first argument`)\n      : applyPatchTask(asArray(patches), getTrailingOptions([].slice.call(arguments, 1)));\n\n   return this._runTask(\n      task,\n      trailingFunctionArgument(arguments),\n   );\n}\n\nGit.prototype.revparse = function () {\n   const commands = ['rev-parse', ...getTrailingOptions(arguments, true)];\n   return this._runTask(\n      straightThroughStringTask(commands, true),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Show various types of objects, for example the file at a certain commit\n *\n * @param {string[]} [options]\n * @param {Function} [then]\n */\nGit.prototype.show = function (options, then) {\n   return this._runTask(\n      straightThroughStringTask(['show', ...getTrailingOptions(arguments, 1)]),\n      trailingFunctionArgument(arguments)\n   );\n};\n\n/**\n */\nGit.prototype.clean = function (mode, options, then) {\n   const usingCleanOptionsArray = isCleanOptionsArray(mode);\n   const cleanMode = usingCleanOptionsArray && mode.join('') || filterType(mode, filterString) || '';\n   const customArgs = getTrailingOptions([].slice.call(arguments, usingCleanOptionsArray ? 1 : 0));\n\n   return this._runTask(\n      cleanWithOptionsTask(cleanMode, customArgs),\n      trailingFunctionArgument(arguments),\n   );\n};\n\n/**\n * Call a simple function at the next step in the chain.\n * @param {Function} [then]\n */\nGit.prototype.exec = function (then) {\n   const task = {\n      commands: [],\n      format: 'utf-8',\n      parser () {\n         if (typeof then === 'function') {\n            then();\n         }\n      }\n   };\n\n   return this._runTask(task);\n};\n\n/**\n * Show commit logs from `HEAD` to the first commit.\n * If provided between `options.from` and `options.to` tags or branch.\n *\n * Additionally you can provide options.file, which is the path to a file in your repository. Then only this file will be considered.\n *\n * To use a custom splitter in the log format, set `options.splitter` to be the string the log should be split on.\n *\n * Options can also be supplied as a standard options object for adding custom properties supported by the git log command.\n * For any other set of options, supply options as an array of strings to be appended to the git log command.\n */\nGit.prototype.log = function (options) {\n   const next = trailingFunctionArgument(arguments);\n\n   if (filterString(arguments[0]) && filterString(arguments[1])) {\n      return this._runTask(\n         configurationErrorTask(`git.log(string, string) should be replaced with git.log({ from: string, to: string })`),\n         next\n      );\n   }\n\n   const parsedOptions = parseLogOptions(\n      trailingOptionsArgument(arguments) || {},\n      filterArray(options) && options || []\n   );\n\n   return this._runTask(\n      logTask(parsedOptions.splitter, parsedOptions.fields, parsedOptions.commands),\n      next,\n   )\n};\n\n/**\n * Clears the queue of pending commands and returns the wrapper instance for chaining.\n *\n * @returns {Git}\n */\nGit.prototype.clearQueue = function () {\n   // TODO:\n   // this._executor.clear();\n   return this;\n};\n\n/**\n * Check if a pathname or pathnames are excluded by .gitignore\n *\n * @param {string|string[]} pathnames\n * @param {Function} [then]\n */\nGit.prototype.checkIgnore = function (pathnames, then) {\n   return this._runTask(\n      checkIgnoreTask(asArray((filterType(pathnames, filterStringOrStringArray, [])))),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nGit.prototype.checkIsRepo = function (checkType, then) {\n   return this._runTask(\n      checkIsRepoTask(filterType(checkType, filterString)),\n      trailingFunctionArgument(arguments),\n   );\n};\n\nmodule.exports = Git;\n","\nconst {gitP} = require('./lib/runners/promise-wrapped');\nconst {esModuleFactory, gitInstanceFactory, gitExportFactory} = require('./lib/git-factory');\n\nmodule.exports = esModuleFactory(\n   gitExportFactory(gitInstanceFactory, {gitP})\n);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst git_construct_error_1 = require(\"./errors/git-construct-error\");\nconst git_error_1 = require(\"./errors/git-error\");\nconst git_plugin_error_1 = require(\"./errors/git-plugin-error\");\nconst git_response_error_1 = require(\"./errors/git-response-error\");\nconst task_configuration_error_1 = require(\"./errors/task-configuration-error\");\nconst check_is_repo_1 = require(\"./tasks/check-is-repo\");\nconst clean_1 = require(\"./tasks/clean\");\nconst reset_1 = require(\"./tasks/reset\");\nconst api = {\n    CheckRepoActions: check_is_repo_1.CheckRepoActions,\n    CleanOptions: clean_1.CleanOptions,\n    GitConstructError: git_construct_error_1.GitConstructError,\n    GitError: git_error_1.GitError,\n    GitPluginError: git_plugin_error_1.GitPluginError,\n    GitResponseError: git_response_error_1.GitResponseError,\n    ResetMode: reset_1.ResetMode,\n    TaskConfigurationError: task_configuration_error_1.TaskConfigurationError,\n};\nexports.default = api;\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitConstructError = void 0;\nconst git_error_1 = require(\"./git-error\");\n/**\n * The `GitConstructError` is thrown when an error occurs in the constructor\n * of the `simple-git` instance itself. Most commonly as a result of using\n * a `baseDir` option that points to a folder that either does not exist,\n * or cannot be read by the user the node script is running as.\n *\n * Check the `.message` property for more detail including the properties\n * passed to the constructor.\n */\nclass GitConstructError extends git_error_1.GitError {\n    constructor(config, message) {\n        super(undefined, message);\n        this.config = config;\n    }\n}\nexports.GitConstructError = GitConstructError;\n//# sourceMappingURL=git-construct-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitError = void 0;\n/**\n * The `GitError` is thrown when the underlying `git` process throws a\n * fatal exception (eg an `ENOENT` exception when attempting to use a\n * non-writable directory as the root for your repo), and acts as the\n * base class for more specific errors thrown by the parsing of the\n * git response or errors in the configuration of the task about to\n * be run.\n *\n * When an exception is thrown, pending tasks in the same instance will\n * not be executed. The recommended way to run a series of tasks that\n * can independently fail without needing to prevent future tasks from\n * running is to catch them individually:\n *\n * ```typescript\n import { gitP, SimpleGit, GitError, PullResult } from 'simple-git';\n\n function catchTask (e: GitError) {\n   return e.\n }\n\n const git = gitP(repoWorkingDir);\n const pulled: PullResult | GitError = await git.pull().catch(catchTask);\n const pushed: string | GitError = await git.pushTags().catch(catchTask);\n ```\n */\nclass GitError extends Error {\n    constructor(task, message) {\n        super(message);\n        this.task = task;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.GitError = GitError;\n//# sourceMappingURL=git-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitPluginError = void 0;\nconst git_error_1 = require(\"./git-error\");\nclass GitPluginError extends git_error_1.GitError {\n    constructor(task, plugin, message) {\n        super(task, message);\n        this.task = task;\n        this.plugin = plugin;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nexports.GitPluginError = GitPluginError;\n//# sourceMappingURL=git-plugin-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitResponseError = void 0;\nconst git_error_1 = require(\"./git-error\");\n/**\n * The `GitResponseError` is the wrapper for a parsed response that is treated as\n * a fatal error, for example attempting a `merge` can leave the repo in a corrupted\n * state when there are conflicts so the task will reject rather than resolve.\n *\n * For example, catching the merge conflict exception:\n *\n * ```typescript\n import { gitP, SimpleGit, GitResponseError, MergeSummary } from 'simple-git';\n\n const git = gitP(repoRoot);\n const mergeOptions: string[] = ['--no-ff', 'other-branch'];\n const mergeSummary: MergeSummary = await git.merge(mergeOptions)\n      .catch((e: GitResponseError<MergeSummary>) => e.git);\n\n if (mergeSummary.failed) {\n   // deal with the error\n }\n ```\n */\nclass GitResponseError extends git_error_1.GitError {\n    constructor(\n    /**\n     * `.git` access the parsed response that is treated as being an error\n     */\n    git, message) {\n        super(undefined, message || String(git));\n        this.git = git;\n    }\n}\nexports.GitResponseError = GitResponseError;\n//# sourceMappingURL=git-response-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TaskConfigurationError = void 0;\nconst git_error_1 = require(\"./git-error\");\n/**\n * The `TaskConfigurationError` is thrown when a command was incorrectly\n * configured. An error of this kind means that no attempt was made to\n * run your command through the underlying `git` binary.\n *\n * Check the `.message` property for more detail on why your configuration\n * resulted in an error.\n */\nclass TaskConfigurationError extends git_error_1.GitError {\n    constructor(message) {\n        super(undefined, message);\n    }\n}\nexports.TaskConfigurationError = TaskConfigurationError;\n//# sourceMappingURL=task-configuration-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gitInstanceFactory = exports.gitExportFactory = exports.esModuleFactory = void 0;\nconst api_1 = require(\"./api\");\nconst plugins_1 = require(\"./plugins\");\nconst utils_1 = require(\"./utils\");\nconst Git = require('../git');\n/**\n * Adds the necessary properties to the supplied object to enable it for use as\n * the default export of a module.\n *\n * Eg: `module.exports = esModuleFactory({ something () {} })`\n */\nfunction esModuleFactory(defaultExport) {\n    return Object.defineProperties(defaultExport, {\n        __esModule: { value: true },\n        default: { value: defaultExport },\n    });\n}\nexports.esModuleFactory = esModuleFactory;\nfunction gitExportFactory(factory, extra) {\n    return Object.assign(function (...args) {\n        return factory.apply(null, args);\n    }, api_1.default, extra || {});\n}\nexports.gitExportFactory = gitExportFactory;\nfunction gitInstanceFactory(baseDir, options) {\n    const plugins = new plugins_1.PluginStore();\n    const config = utils_1.createInstanceConfig(baseDir && (typeof baseDir === 'string' ? { baseDir } : baseDir) || {}, options);\n    if (!utils_1.folderExists(config.baseDir)) {\n        throw new api_1.default.GitConstructError(config, `Cannot use simple-git on a directory that does not exist`);\n    }\n    if (Array.isArray(config.config)) {\n        plugins.add(plugins_1.commandConfigPrefixingPlugin(config.config));\n    }\n    config.progress && plugins.add(plugins_1.progressMonitorPlugin(config.progress));\n    config.timeout && plugins.add(plugins_1.timeoutPlugin(config.timeout));\n    plugins.add(plugins_1.errorDetectionPlugin(plugins_1.errorDetectionHandler(true)));\n    config.errors && plugins.add(plugins_1.errorDetectionPlugin(config.errors));\n    return new Git(config, plugins);\n}\nexports.gitInstanceFactory = gitInstanceFactory;\n//# sourceMappingURL=git-factory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitLogger = exports.createLogger = void 0;\nconst debug_1 = require(\"debug\");\nconst utils_1 = require(\"./utils\");\ndebug_1.default.formatters.L = (value) => String(utils_1.filterHasLength(value) ? value.length : '-');\ndebug_1.default.formatters.B = (value) => {\n    if (Buffer.isBuffer(value)) {\n        return value.toString('utf8');\n    }\n    return utils_1.objectToString(value);\n};\nfunction createLog() {\n    return debug_1.default('simple-git');\n}\nfunction prefixedLogger(to, prefix, forward) {\n    if (!prefix || !String(prefix).replace(/\\s*/, '')) {\n        return !forward ? to : (message, ...args) => {\n            to(message, ...args);\n            forward(message, ...args);\n        };\n    }\n    return (message, ...args) => {\n        to(`%s ${message}`, prefix, ...args);\n        if (forward) {\n            forward(message, ...args);\n        }\n    };\n}\nfunction childLoggerName(name, childDebugger, { namespace: parentNamespace }) {\n    if (typeof name === 'string') {\n        return name;\n    }\n    const childNamespace = childDebugger && childDebugger.namespace || '';\n    if (childNamespace.startsWith(parentNamespace)) {\n        return childNamespace.substr(parentNamespace.length + 1);\n    }\n    return childNamespace || parentNamespace;\n}\nfunction createLogger(label, verbose, initialStep, infoDebugger = createLog()) {\n    const labelPrefix = label && `[${label}]` || '';\n    const spawned = [];\n    const debugDebugger = (typeof verbose === 'string') ? infoDebugger.extend(verbose) : verbose;\n    const key = childLoggerName(utils_1.filterType(verbose, utils_1.filterString), debugDebugger, infoDebugger);\n    return step(initialStep);\n    function sibling(name, initial) {\n        return utils_1.append(spawned, createLogger(label, key.replace(/^[^:]+/, name), initial, infoDebugger));\n    }\n    function step(phase) {\n        const stepPrefix = phase && `[${phase}]` || '';\n        const debug = debugDebugger && prefixedLogger(debugDebugger, stepPrefix) || utils_1.NOOP;\n        const info = prefixedLogger(infoDebugger, `${labelPrefix} ${stepPrefix}`, debug);\n        return Object.assign(debugDebugger ? debug : info, {\n            label,\n            sibling,\n            info,\n            step,\n        });\n    }\n}\nexports.createLogger = createLogger;\n/**\n * The `GitLogger` is used by the main `SimpleGit` runner to handle logging\n * any warnings or errors.\n */\nclass GitLogger {\n    constructor(_out = createLog()) {\n        this._out = _out;\n        this.error = prefixedLogger(_out, '[ERROR]');\n        this.warn = prefixedLogger(_out, '[WARN]');\n    }\n    silent(silence = false) {\n        if (silence !== this._out.enabled) {\n            return;\n        }\n        const { namespace } = this._out;\n        const env = (process.env.DEBUG || '').split(',').filter(s => !!s);\n        const hasOn = env.includes(namespace);\n        const hasOff = env.includes(`-${namespace}`);\n        // enabling the log\n        if (!silence) {\n            if (hasOff) {\n                utils_1.remove(env, `-${namespace}`);\n            }\n            else {\n                env.push(namespace);\n            }\n        }\n        else {\n            if (hasOn) {\n                utils_1.remove(env, namespace);\n            }\n            else {\n                env.push(`-${namespace}`);\n            }\n        }\n        debug_1.default.enable(env.join(','));\n    }\n}\nexports.GitLogger = GitLogger;\n//# sourceMappingURL=git-logger.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBranchDeletionError = exports.parseBranchDeletions = void 0;\nconst BranchDeleteSummary_1 = require(\"../responses/BranchDeleteSummary\");\nconst utils_1 = require(\"../utils\");\nconst deleteSuccessRegex = /(\\S+)\\s+\\(\\S+\\s([^)]+)\\)/;\nconst deleteErrorRegex = /^error[^']+'([^']+)'/m;\nconst parsers = [\n    new utils_1.LineParser(deleteSuccessRegex, (result, [branch, hash]) => {\n        const deletion = BranchDeleteSummary_1.branchDeletionSuccess(branch, hash);\n        result.all.push(deletion);\n        result.branches[branch] = deletion;\n    }),\n    new utils_1.LineParser(deleteErrorRegex, (result, [branch]) => {\n        const deletion = BranchDeleteSummary_1.branchDeletionFailure(branch);\n        result.errors.push(deletion);\n        result.all.push(deletion);\n        result.branches[branch] = deletion;\n    }),\n];\nconst parseBranchDeletions = (stdOut, stdErr) => {\n    return utils_1.parseStringResponse(new BranchDeleteSummary_1.BranchDeletionBatch(), parsers, stdOut, stdErr);\n};\nexports.parseBranchDeletions = parseBranchDeletions;\nfunction hasBranchDeletionError(data, processExitCode) {\n    return processExitCode === utils_1.ExitCodes.ERROR && deleteErrorRegex.test(data);\n}\nexports.hasBranchDeletionError = hasBranchDeletionError;\n//# sourceMappingURL=parse-branch-delete.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseBranchSummary = void 0;\nconst BranchSummary_1 = require(\"../responses/BranchSummary\");\nconst utils_1 = require(\"../utils\");\nconst parsers = [\n    new utils_1.LineParser(/^(\\*\\s)?\\((?:HEAD )?detached (?:from|at) (\\S+)\\)\\s+([a-z0-9]+)\\s(.*)$/, (result, [current, name, commit, label]) => {\n        result.push(!!current, true, name, commit, label);\n    }),\n    new utils_1.LineParser(/^(\\*\\s)?(\\S+)\\s+([a-z0-9]+)\\s(.*)$/s, (result, [current, name, commit, label]) => {\n        result.push(!!current, false, name, commit, label);\n    })\n];\nfunction parseBranchSummary(stdOut) {\n    return utils_1.parseStringResponse(new BranchSummary_1.BranchSummaryResult(), parsers, stdOut);\n}\nexports.parseBranchSummary = parseBranchSummary;\n//# sourceMappingURL=parse-branch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseCommitResult = void 0;\nconst utils_1 = require(\"../utils\");\nconst parsers = [\n    new utils_1.LineParser(/\\[([^\\s]+)( \\([^)]+\\))? ([^\\]]+)/, (result, [branch, root, commit]) => {\n        result.branch = branch;\n        result.commit = commit;\n        result.root = !!root;\n    }),\n    new utils_1.LineParser(/\\s*Author:\\s(.+)/i, (result, [author]) => {\n        const parts = author.split('<');\n        const email = parts.pop();\n        if (!email || !email.includes('@')) {\n            return;\n        }\n        result.author = {\n            email: email.substr(0, email.length - 1),\n            name: parts.join('<').trim()\n        };\n    }),\n    new utils_1.LineParser(/(\\d+)[^,]*(?:,\\s*(\\d+)[^,]*)(?:,\\s*(\\d+))/g, (result, [changes, insertions, deletions]) => {\n        result.summary.changes = parseInt(changes, 10) || 0;\n        result.summary.insertions = parseInt(insertions, 10) || 0;\n        result.summary.deletions = parseInt(deletions, 10) || 0;\n    }),\n    new utils_1.LineParser(/^(\\d+)[^,]*(?:,\\s*(\\d+)[^(]+\\(([+-]))?/, (result, [changes, lines, direction]) => {\n        result.summary.changes = parseInt(changes, 10) || 0;\n        const count = parseInt(lines, 10) || 0;\n        if (direction === '-') {\n            result.summary.deletions = count;\n        }\n        else if (direction === '+') {\n            result.summary.insertions = count;\n        }\n    }),\n];\nfunction parseCommitResult(stdOut) {\n    const result = {\n        author: null,\n        branch: '',\n        commit: '',\n        root: false,\n        summary: {\n            changes: 0,\n            insertions: 0,\n            deletions: 0,\n        },\n    };\n    return utils_1.parseStringResponse(result, parsers, stdOut);\n}\nexports.parseCommitResult = parseCommitResult;\n//# sourceMappingURL=parse-commit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDiffResult = void 0;\nconst DiffSummary_1 = require(\"../responses/DiffSummary\");\nfunction parseDiffResult(stdOut) {\n    const lines = stdOut.trim().split('\\n');\n    const status = new DiffSummary_1.DiffSummary();\n    readSummaryLine(status, lines.pop());\n    for (let i = 0, max = lines.length; i < max; i++) {\n        const line = lines[i];\n        textFileChange(line, status) || binaryFileChange(line, status);\n    }\n    return status;\n}\nexports.parseDiffResult = parseDiffResult;\nfunction readSummaryLine(status, summary) {\n    (summary || '')\n        .trim()\n        .split(', ')\n        .forEach(function (text) {\n        const summary = /(\\d+)\\s([a-z]+)/.exec(text);\n        if (!summary) {\n            return;\n        }\n        summaryType(status, summary[2], parseInt(summary[1], 10));\n    });\n}\nfunction summaryType(status, key, value) {\n    const match = (/([a-z]+?)s?\\b/.exec(key));\n    if (!match || !statusUpdate[match[1]]) {\n        return;\n    }\n    statusUpdate[match[1]](status, value);\n}\nconst statusUpdate = {\n    file(status, value) {\n        status.changed = value;\n    },\n    deletion(status, value) {\n        status.deletions = value;\n    },\n    insertion(status, value) {\n        status.insertions = value;\n    }\n};\nfunction textFileChange(input, { files }) {\n    const line = input.trim().match(/^(.+)\\s+\\|\\s+(\\d+)(\\s+[+\\-]+)?$/);\n    if (line) {\n        var alterations = (line[3] || '').trim();\n        files.push({\n            file: line[1].trim(),\n            changes: parseInt(line[2], 10),\n            insertions: alterations.replace(/-/g, '').length,\n            deletions: alterations.replace(/\\+/g, '').length,\n            binary: false\n        });\n        return true;\n    }\n    return false;\n}\nfunction binaryFileChange(input, { files }) {\n    const line = input.match(/^(.+) \\|\\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)$/);\n    if (line) {\n        files.push({\n            file: line[1].trim(),\n            before: +line[2],\n            after: +line[3],\n            binary: true\n        });\n        return true;\n    }\n    return false;\n}\n//# sourceMappingURL=parse-diff-summary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFetchResult = void 0;\nconst utils_1 = require(\"../utils\");\nconst parsers = [\n    new utils_1.LineParser(/From (.+)$/, (result, [remote]) => {\n        result.remote = remote;\n    }),\n    new utils_1.LineParser(/\\* \\[new branch]\\s+(\\S+)\\s*-> (.+)$/, (result, [name, tracking]) => {\n        result.branches.push({\n            name,\n            tracking,\n        });\n    }),\n    new utils_1.LineParser(/\\* \\[new tag]\\s+(\\S+)\\s*-> (.+)$/, (result, [name, tracking]) => {\n        result.tags.push({\n            name,\n            tracking,\n        });\n    })\n];\nfunction parseFetchResult(stdOut, stdErr) {\n    const result = {\n        raw: stdOut,\n        remote: null,\n        branches: [],\n        tags: [],\n    };\n    return utils_1.parseStringResponse(result, parsers, stdOut, stdErr);\n}\nexports.parseFetchResult = parseFetchResult;\n//# sourceMappingURL=parse-fetch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createListLogSummaryParser = exports.SPLITTER = exports.COMMIT_BOUNDARY = exports.START_BOUNDARY = void 0;\nconst utils_1 = require(\"../utils\");\nconst parse_diff_summary_1 = require(\"./parse-diff-summary\");\nexports.START_BOUNDARY = 'òòòòòò ';\nexports.COMMIT_BOUNDARY = ' òò';\nexports.SPLITTER = ' ò ';\nconst defaultFieldNames = ['hash', 'date', 'message', 'refs', 'author_name', 'author_email'];\nfunction lineBuilder(tokens, fields) {\n    return fields.reduce((line, field, index) => {\n        line[field] = tokens[index] || '';\n        return line;\n    }, Object.create({ diff: null }));\n}\nfunction createListLogSummaryParser(splitter = exports.SPLITTER, fields = defaultFieldNames) {\n    return function (stdOut) {\n        const all = utils_1.toLinesWithContent(stdOut, true, exports.START_BOUNDARY)\n            .map(function (item) {\n            const lineDetail = item.trim().split(exports.COMMIT_BOUNDARY);\n            const listLogLine = lineBuilder(lineDetail[0].trim().split(splitter), fields);\n            if (lineDetail.length > 1 && !!lineDetail[1].trim()) {\n                listLogLine.diff = parse_diff_summary_1.parseDiffResult(lineDetail[1]);\n            }\n            return listLogLine;\n        });\n        return {\n            all,\n            latest: all.length && all[0] || null,\n            total: all.length,\n        };\n    };\n}\nexports.createListLogSummaryParser = createListLogSummaryParser;\n//# sourceMappingURL=parse-list-log-summary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseMergeDetail = exports.parseMergeResult = void 0;\nconst MergeSummary_1 = require(\"../responses/MergeSummary\");\nconst utils_1 = require(\"../utils\");\nconst parse_pull_1 = require(\"./parse-pull\");\nconst parsers = [\n    new utils_1.LineParser(/^Auto-merging\\s+(.+)$/, (summary, [autoMerge]) => {\n        summary.merges.push(autoMerge);\n    }),\n    new utils_1.LineParser(/^CONFLICT\\s+\\((.+)\\): Merge conflict in (.+)$/, (summary, [reason, file]) => {\n        summary.conflicts.push(new MergeSummary_1.MergeSummaryConflict(reason, file));\n    }),\n    new utils_1.LineParser(/^CONFLICT\\s+\\((.+\\/delete)\\): (.+) deleted in (.+) and/, (summary, [reason, file, deleteRef]) => {\n        summary.conflicts.push(new MergeSummary_1.MergeSummaryConflict(reason, file, { deleteRef }));\n    }),\n    new utils_1.LineParser(/^CONFLICT\\s+\\((.+)\\):/, (summary, [reason]) => {\n        summary.conflicts.push(new MergeSummary_1.MergeSummaryConflict(reason, null));\n    }),\n    new utils_1.LineParser(/^Automatic merge failed;\\s+(.+)$/, (summary, [result]) => {\n        summary.result = result;\n    }),\n];\n/**\n * Parse the complete response from `git.merge`\n */\nconst parseMergeResult = (stdOut, stdErr) => {\n    return Object.assign(exports.parseMergeDetail(stdOut, stdErr), parse_pull_1.parsePullResult(stdOut, stdErr));\n};\nexports.parseMergeResult = parseMergeResult;\n/**\n * Parse the merge specific detail (ie: not the content also available in the pull detail) from `git.mnerge`\n * @param stdOut\n */\nconst parseMergeDetail = (stdOut) => {\n    return utils_1.parseStringResponse(new MergeSummary_1.MergeSummaryDetail(), parsers, stdOut);\n};\nexports.parseMergeDetail = parseMergeDetail;\n//# sourceMappingURL=parse-merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseMoveResult = void 0;\nconst utils_1 = require(\"../utils\");\nconst parsers = [\n    new utils_1.LineParser(/^Renaming (.+) to (.+)$/, (result, [from, to]) => {\n        result.moves.push({ from, to });\n    }),\n];\nfunction parseMoveResult(stdOut) {\n    return utils_1.parseStringResponse({ moves: [] }, parsers, stdOut);\n}\nexports.parseMoveResult = parseMoveResult;\n//# sourceMappingURL=parse-move.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parsePullResult = exports.parsePullDetail = void 0;\nconst PullSummary_1 = require(\"../responses/PullSummary\");\nconst utils_1 = require(\"../utils\");\nconst parse_remote_messages_1 = require(\"./parse-remote-messages\");\nconst FILE_UPDATE_REGEX = /^\\s*(.+?)\\s+\\|\\s+\\d+\\s*(\\+*)(-*)/;\nconst SUMMARY_REGEX = /(\\d+)\\D+((\\d+)\\D+\\(\\+\\))?(\\D+(\\d+)\\D+\\(-\\))?/;\nconst ACTION_REGEX = /^(create|delete) mode \\d+ (.+)/;\nconst parsers = [\n    new utils_1.LineParser(FILE_UPDATE_REGEX, (result, [file, insertions, deletions]) => {\n        result.files.push(file);\n        if (insertions) {\n            result.insertions[file] = insertions.length;\n        }\n        if (deletions) {\n            result.deletions[file] = deletions.length;\n        }\n    }),\n    new utils_1.LineParser(SUMMARY_REGEX, (result, [changes, , insertions, , deletions]) => {\n        if (insertions !== undefined || deletions !== undefined) {\n            result.summary.changes = +changes || 0;\n            result.summary.insertions = +insertions || 0;\n            result.summary.deletions = +deletions || 0;\n            return true;\n        }\n        return false;\n    }),\n    new utils_1.LineParser(ACTION_REGEX, (result, [action, file]) => {\n        utils_1.append(result.files, file);\n        utils_1.append((action === 'create') ? result.created : result.deleted, file);\n    }),\n];\nconst parsePullDetail = (stdOut, stdErr) => {\n    return utils_1.parseStringResponse(new PullSummary_1.PullSummary(), parsers, stdOut, stdErr);\n};\nexports.parsePullDetail = parsePullDetail;\nconst parsePullResult = (stdOut, stdErr) => {\n    return Object.assign(new PullSummary_1.PullSummary(), exports.parsePullDetail(stdOut, stdErr), parse_remote_messages_1.parseRemoteMessages(stdOut, stdErr));\n};\nexports.parsePullResult = parsePullResult;\n//# sourceMappingURL=parse-pull.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parsePushDetail = exports.parsePushResult = void 0;\nconst utils_1 = require(\"../utils\");\nconst parse_remote_messages_1 = require(\"./parse-remote-messages\");\nfunction pushResultPushedItem(local, remote, status) {\n    const deleted = status.includes('deleted');\n    const tag = status.includes('tag') || /^refs\\/tags/.test(local);\n    const alreadyUpdated = !status.includes('new');\n    return {\n        deleted,\n        tag,\n        branch: !tag,\n        new: !alreadyUpdated,\n        alreadyUpdated,\n        local,\n        remote,\n    };\n}\nconst parsers = [\n    new utils_1.LineParser(/^Pushing to (.+)$/, (result, [repo]) => {\n        result.repo = repo;\n    }),\n    new utils_1.LineParser(/^updating local tracking ref '(.+)'/, (result, [local]) => {\n        result.ref = Object.assign(Object.assign({}, (result.ref || {})), { local });\n    }),\n    new utils_1.LineParser(/^[*-=]\\s+([^:]+):(\\S+)\\s+\\[(.+)]$/, (result, [local, remote, type]) => {\n        result.pushed.push(pushResultPushedItem(local, remote, type));\n    }),\n    new utils_1.LineParser(/^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/, (result, [local, remote, remoteName]) => {\n        result.branch = Object.assign(Object.assign({}, (result.branch || {})), { local,\n            remote,\n            remoteName });\n    }),\n    new utils_1.LineParser(/^([^:]+):(\\S+)\\s+([a-z0-9]+)\\.\\.([a-z0-9]+)$/, (result, [local, remote, from, to]) => {\n        result.update = {\n            head: {\n                local,\n                remote,\n            },\n            hash: {\n                from,\n                to,\n            },\n        };\n    }),\n];\nconst parsePushResult = (stdOut, stdErr) => {\n    const pushDetail = exports.parsePushDetail(stdOut, stdErr);\n    const responseDetail = parse_remote_messages_1.parseRemoteMessages(stdOut, stdErr);\n    return Object.assign(Object.assign({}, pushDetail), responseDetail);\n};\nexports.parsePushResult = parsePushResult;\nconst parsePushDetail = (stdOut, stdErr) => {\n    return utils_1.parseStringResponse({ pushed: [] }, parsers, stdOut, stdErr);\n};\nexports.parsePushDetail = parsePushDetail;\n//# sourceMappingURL=parse-push.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoteMessageSummary = exports.parseRemoteMessages = void 0;\nconst utils_1 = require(\"../utils\");\nconst parse_remote_objects_1 = require(\"./parse-remote-objects\");\nconst parsers = [\n    new utils_1.RemoteLineParser(/^remote:\\s*(.+)$/, (result, [text]) => {\n        result.remoteMessages.all.push(text.trim());\n        return false;\n    }),\n    ...parse_remote_objects_1.remoteMessagesObjectParsers,\n    new utils_1.RemoteLineParser([/create a (?:pull|merge) request/i, /\\s(https?:\\/\\/\\S+)$/], (result, [pullRequestUrl]) => {\n        result.remoteMessages.pullRequestUrl = pullRequestUrl;\n    }),\n    new utils_1.RemoteLineParser([/found (\\d+) vulnerabilities.+\\(([^)]+)\\)/i, /\\s(https?:\\/\\/\\S+)$/], (result, [count, summary, url]) => {\n        result.remoteMessages.vulnerabilities = {\n            count: utils_1.asNumber(count),\n            summary,\n            url,\n        };\n    }),\n];\nfunction parseRemoteMessages(_stdOut, stdErr) {\n    return utils_1.parseStringResponse({ remoteMessages: new RemoteMessageSummary() }, parsers, stdErr);\n}\nexports.parseRemoteMessages = parseRemoteMessages;\nclass RemoteMessageSummary {\n    constructor() {\n        this.all = [];\n    }\n}\nexports.RemoteMessageSummary = RemoteMessageSummary;\n//# sourceMappingURL=parse-remote-messages.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remoteMessagesObjectParsers = void 0;\nconst utils_1 = require(\"../utils\");\nfunction objectEnumerationResult(remoteMessages) {\n    return (remoteMessages.objects = remoteMessages.objects || {\n        compressing: 0,\n        counting: 0,\n        enumerating: 0,\n        packReused: 0,\n        reused: { count: 0, delta: 0 },\n        total: { count: 0, delta: 0 }\n    });\n}\nfunction asObjectCount(source) {\n    const count = /^\\s*(\\d+)/.exec(source);\n    const delta = /delta (\\d+)/i.exec(source);\n    return {\n        count: utils_1.asNumber(count && count[1] || '0'),\n        delta: utils_1.asNumber(delta && delta[1] || '0'),\n    };\n}\nexports.remoteMessagesObjectParsers = [\n    new utils_1.RemoteLineParser(/^remote:\\s*(enumerating|counting|compressing) objects: (\\d+),/i, (result, [action, count]) => {\n        const key = action.toLowerCase();\n        const enumeration = objectEnumerationResult(result.remoteMessages);\n        Object.assign(enumeration, { [key]: utils_1.asNumber(count) });\n    }),\n    new utils_1.RemoteLineParser(/^remote:\\s*(enumerating|counting|compressing) objects: \\d+% \\(\\d+\\/(\\d+)\\),/i, (result, [action, count]) => {\n        const key = action.toLowerCase();\n        const enumeration = objectEnumerationResult(result.remoteMessages);\n        Object.assign(enumeration, { [key]: utils_1.asNumber(count) });\n    }),\n    new utils_1.RemoteLineParser(/total ([^,]+), reused ([^,]+), pack-reused (\\d+)/i, (result, [total, reused, packReused]) => {\n        const objects = objectEnumerationResult(result.remoteMessages);\n        objects.total = asObjectCount(total);\n        objects.reused = asObjectCount(reused);\n        objects.packReused = utils_1.asNumber(packReused);\n    }),\n];\n//# sourceMappingURL=parse-remote-objects.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.commandConfigPrefixingPlugin = void 0;\nconst utils_1 = require(\"../utils\");\nfunction commandConfigPrefixingPlugin(configuration) {\n    const prefix = utils_1.prefixedArray(configuration, '-c');\n    return {\n        type: 'spawn.args',\n        action(data) {\n            return [...prefix, ...data];\n        },\n    };\n}\nexports.commandConfigPrefixingPlugin = commandConfigPrefixingPlugin;\n//# sourceMappingURL=command-config-prefixing-plugin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorDetectionPlugin = exports.errorDetectionHandler = void 0;\nconst git_error_1 = require(\"../errors/git-error\");\nfunction isTaskError(result) {\n    return !!(result.exitCode && result.stdErr.length);\n}\nfunction getErrorMessage(result) {\n    return Buffer.concat([...result.stdOut, ...result.stdErr]);\n}\nfunction errorDetectionHandler(overwrite = false, isError = isTaskError, errorMessage = getErrorMessage) {\n    return (error, result) => {\n        if ((!overwrite && error) || !isError(result)) {\n            return error;\n        }\n        return errorMessage(result);\n    };\n}\nexports.errorDetectionHandler = errorDetectionHandler;\nfunction errorDetectionPlugin(config) {\n    return {\n        type: 'task.error',\n        action(data, context) {\n            const error = config(data.error, {\n                stdErr: context.stdErr,\n                stdOut: context.stdOut,\n                exitCode: context.exitCode\n            });\n            if (Buffer.isBuffer(error)) {\n                return { error: new git_error_1.GitError(undefined, error.toString('utf-8')) };\n            }\n            return {\n                error\n            };\n        },\n    };\n}\nexports.errorDetectionPlugin = errorDetectionPlugin;\n//# sourceMappingURL=error-detection.plugin.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./command-config-prefixing-plugin\"), exports);\n__exportStar(require(\"./error-detection.plugin\"), exports);\n__exportStar(require(\"./plugin-store\"), exports);\n__exportStar(require(\"./progress-monitor-plugin\"), exports);\n__exportStar(require(\"./simple-git-plugin\"), exports);\n__exportStar(require(\"./timout-plugin\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PluginStore = void 0;\nconst utils_1 = require(\"../utils\");\nclass PluginStore {\n    constructor() {\n        this.plugins = new Set();\n    }\n    add(plugin) {\n        const plugins = [];\n        utils_1.asArray(plugin).forEach(plugin => plugin && this.plugins.add(utils_1.append(plugins, plugin)));\n        return () => {\n            plugins.forEach(plugin => this.plugins.delete(plugin));\n        };\n    }\n    exec(type, data, context) {\n        let output = data;\n        const contextual = Object.freeze(Object.create(context));\n        for (const plugin of this.plugins) {\n            if (plugin.type === type) {\n                output = plugin.action(output, contextual);\n            }\n        }\n        return output;\n    }\n}\nexports.PluginStore = PluginStore;\n//# sourceMappingURL=plugin-store.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.progressMonitorPlugin = void 0;\nconst utils_1 = require(\"../utils\");\nfunction progressMonitorPlugin(progress) {\n    const progressCommand = '--progress';\n    const progressMethods = ['checkout', 'clone', 'fetch', 'pull', 'push'];\n    const onProgress = {\n        type: 'spawn.after',\n        action(_data, context) {\n            var _a;\n            if (!context.commands.includes(progressCommand)) {\n                return;\n            }\n            (_a = context.spawned.stderr) === null || _a === void 0 ? void 0 : _a.on('data', (chunk) => {\n                const message = /^([a-zA-Z ]+):\\s*(\\d+)% \\((\\d+)\\/(\\d+)\\)/.exec(chunk.toString('utf8'));\n                if (!message) {\n                    return;\n                }\n                progress({\n                    method: context.method,\n                    stage: progressEventStage(message[1]),\n                    progress: utils_1.asNumber(message[2]),\n                    processed: utils_1.asNumber(message[3]),\n                    total: utils_1.asNumber(message[4]),\n                });\n            });\n        }\n    };\n    const onArgs = {\n        type: 'spawn.args',\n        action(args, context) {\n            if (!progressMethods.includes(context.method)) {\n                return args;\n            }\n            return utils_1.including(args, progressCommand);\n        }\n    };\n    return [onArgs, onProgress];\n}\nexports.progressMonitorPlugin = progressMonitorPlugin;\nfunction progressEventStage(input) {\n    return String(input.toLowerCase().split(' ', 1)) || 'unknown';\n}\n//# sourceMappingURL=progress-monitor-plugin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=simple-git-plugin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.timeoutPlugin = void 0;\nconst git_plugin_error_1 = require(\"../errors/git-plugin-error\");\nfunction timeoutPlugin({ block }) {\n    if (block > 0) {\n        return {\n            type: 'spawn.after',\n            action(_data, context) {\n                var _a, _b;\n                let timeout;\n                function wait() {\n                    timeout && clearTimeout(timeout);\n                    timeout = setTimeout(kill, block);\n                }\n                function stop() {\n                    var _a, _b;\n                    (_a = context.spawned.stdout) === null || _a === void 0 ? void 0 : _a.off('data', wait);\n                    (_b = context.spawned.stderr) === null || _b === void 0 ? void 0 : _b.off('data', wait);\n                    context.spawned.off('exit', stop);\n                    context.spawned.off('close', stop);\n                }\n                function kill() {\n                    stop();\n                    context.kill(new git_plugin_error_1.GitPluginError(undefined, 'timeout', `block timeout reached`));\n                }\n                (_a = context.spawned.stdout) === null || _a === void 0 ? void 0 : _a.on('data', wait);\n                (_b = context.spawned.stderr) === null || _b === void 0 ? void 0 : _b.on('data', wait);\n                context.spawned.on('exit', stop);\n                context.spawned.on('close', stop);\n                wait();\n            }\n        };\n    }\n}\nexports.timeoutPlugin = timeoutPlugin;\n//# sourceMappingURL=timout-plugin.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSingleBranchDeleteFailure = exports.branchDeletionFailure = exports.branchDeletionSuccess = exports.BranchDeletionBatch = void 0;\nclass BranchDeletionBatch {\n    constructor() {\n        this.all = [];\n        this.branches = {};\n        this.errors = [];\n    }\n    get success() {\n        return !this.errors.length;\n    }\n}\nexports.BranchDeletionBatch = BranchDeletionBatch;\nfunction branchDeletionSuccess(branch, hash) {\n    return {\n        branch, hash, success: true,\n    };\n}\nexports.branchDeletionSuccess = branchDeletionSuccess;\nfunction branchDeletionFailure(branch) {\n    return {\n        branch, hash: null, success: false,\n    };\n}\nexports.branchDeletionFailure = branchDeletionFailure;\nfunction isSingleBranchDeleteFailure(test) {\n    return test.success;\n}\nexports.isSingleBranchDeleteFailure = isSingleBranchDeleteFailure;\n//# sourceMappingURL=BranchDeleteSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BranchSummaryResult = void 0;\nclass BranchSummaryResult {\n    constructor() {\n        this.all = [];\n        this.branches = {};\n        this.current = '';\n        this.detached = false;\n    }\n    push(current, detached, name, commit, label) {\n        if (current) {\n            this.detached = detached;\n            this.current = name;\n        }\n        this.all.push(name);\n        this.branches[name] = {\n            current: current,\n            name: name,\n            commit: commit,\n            label: label\n        };\n    }\n}\nexports.BranchSummaryResult = BranchSummaryResult;\n//# sourceMappingURL=BranchSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseCheckIgnore = void 0;\n/**\n * Parser for the `check-ignore` command - returns each file as a string array\n */\nconst parseCheckIgnore = (text) => {\n    return text.split(/\\n/g)\n        .map(line => line.trim())\n        .filter(file => !!file);\n};\nexports.parseCheckIgnore = parseCheckIgnore;\n//# sourceMappingURL=CheckIgnore.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cleanSummaryParser = exports.CleanResponse = void 0;\nconst utils_1 = require(\"../utils\");\nclass CleanResponse {\n    constructor(dryRun) {\n        this.dryRun = dryRun;\n        this.paths = [];\n        this.files = [];\n        this.folders = [];\n    }\n}\nexports.CleanResponse = CleanResponse;\nconst removalRegexp = /^[a-z]+\\s*/i;\nconst dryRunRemovalRegexp = /^[a-z]+\\s+[a-z]+\\s*/i;\nconst isFolderRegexp = /\\/$/;\nfunction cleanSummaryParser(dryRun, text) {\n    const summary = new CleanResponse(dryRun);\n    const regexp = dryRun ? dryRunRemovalRegexp : removalRegexp;\n    utils_1.toLinesWithContent(text).forEach(line => {\n        const removed = line.replace(regexp, '');\n        summary.paths.push(removed);\n        (isFolderRegexp.test(removed) ? summary.folders : summary.files).push(removed);\n    });\n    return summary;\n}\nexports.cleanSummaryParser = cleanSummaryParser;\n//# sourceMappingURL=CleanSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.configListParser = exports.ConfigList = void 0;\nconst utils_1 = require(\"../utils\");\nclass ConfigList {\n    constructor() {\n        this.files = [];\n        this.values = Object.create(null);\n    }\n    get all() {\n        if (!this._all) {\n            this._all = this.files.reduce((all, file) => {\n                return Object.assign(all, this.values[file]);\n            }, {});\n        }\n        return this._all;\n    }\n    addFile(file) {\n        if (!(file in this.values)) {\n            const latest = utils_1.last(this.files);\n            this.values[file] = latest ? Object.create(this.values[latest]) : {};\n            this.files.push(file);\n        }\n        return this.values[file];\n    }\n    addValue(file, key, value) {\n        const values = this.addFile(file);\n        if (!values.hasOwnProperty(key)) {\n            values[key] = value;\n        }\n        else if (Array.isArray(values[key])) {\n            values[key].push(value);\n        }\n        else {\n            values[key] = [values[key], value];\n        }\n        this._all = undefined;\n    }\n}\nexports.ConfigList = ConfigList;\nfunction configListParser(text) {\n    const config = new ConfigList();\n    const lines = text.split('\\0');\n    for (let i = 0, max = lines.length - 1; i < max;) {\n        const file = configFilePath(lines[i++]);\n        const [key, value] = utils_1.splitOn(lines[i++], '\\n');\n        config.addValue(file, key, value);\n    }\n    return config;\n}\nexports.configListParser = configListParser;\nfunction configFilePath(filePath) {\n    return filePath.replace(/^(file):/, '');\n}\n//# sourceMappingURL=ConfigList.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DiffSummary = void 0;\n/***\n * The DiffSummary is returned as a response to getting `git().status()`\n */\nclass DiffSummary {\n    constructor() {\n        this.changed = 0;\n        this.deletions = 0;\n        this.insertions = 0;\n        this.files = [];\n    }\n}\nexports.DiffSummary = DiffSummary;\n//# sourceMappingURL=DiffSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileStatusSummary = exports.fromPathRegex = void 0;\nexports.fromPathRegex = /^(.+) -> (.+)$/;\nclass FileStatusSummary {\n    constructor(path, index, working_dir) {\n        this.path = path;\n        this.index = index;\n        this.working_dir = working_dir;\n        if ('R' === (index + working_dir)) {\n            const detail = exports.fromPathRegex.exec(path) || [null, path, path];\n            this.from = detail[1] || '';\n            this.path = detail[2] || '';\n        }\n    }\n}\nexports.FileStatusSummary = FileStatusSummary;\n//# sourceMappingURL=FileStatusSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseGetRemotesVerbose = exports.parseGetRemotes = void 0;\nconst utils_1 = require(\"../utils\");\nfunction parseGetRemotes(text) {\n    const remotes = {};\n    forEach(text, ([name]) => remotes[name] = { name });\n    return Object.values(remotes);\n}\nexports.parseGetRemotes = parseGetRemotes;\nfunction parseGetRemotesVerbose(text) {\n    const remotes = {};\n    forEach(text, ([name, url, purpose]) => {\n        if (!remotes.hasOwnProperty(name)) {\n            remotes[name] = {\n                name: name,\n                refs: { fetch: '', push: '' },\n            };\n        }\n        if (purpose && url) {\n            remotes[name].refs[purpose.replace(/[^a-z]/g, '')] = url;\n        }\n    });\n    return Object.values(remotes);\n}\nexports.parseGetRemotesVerbose = parseGetRemotesVerbose;\nfunction forEach(text, handler) {\n    utils_1.forEachLineWithContent(text, (line) => handler(line.split(/\\s+/)));\n}\n//# sourceMappingURL=GetRemoteSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseInit = exports.InitSummary = void 0;\nclass InitSummary {\n    constructor(bare, path, existing, gitDir) {\n        this.bare = bare;\n        this.path = path;\n        this.existing = existing;\n        this.gitDir = gitDir;\n    }\n}\nexports.InitSummary = InitSummary;\nconst initResponseRegex = /^Init.+ repository in (.+)$/;\nconst reInitResponseRegex = /^Rein.+ in (.+)$/;\nfunction parseInit(bare, path, text) {\n    const response = String(text).trim();\n    let result;\n    if ((result = initResponseRegex.exec(response))) {\n        return new InitSummary(bare, path, false, result[1]);\n    }\n    if ((result = reInitResponseRegex.exec(response))) {\n        return new InitSummary(bare, path, true, result[1]);\n    }\n    let gitDir = '';\n    const tokens = response.split(' ');\n    while (tokens.length) {\n        const token = tokens.shift();\n        if (token === 'in') {\n            gitDir = tokens.join(' ');\n            break;\n        }\n    }\n    return new InitSummary(bare, path, /^re/i.test(response), gitDir);\n}\nexports.parseInit = parseInit;\n//# sourceMappingURL=InitSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MergeSummaryDetail = exports.MergeSummaryConflict = void 0;\nclass MergeSummaryConflict {\n    constructor(reason, file = null, meta) {\n        this.reason = reason;\n        this.file = file;\n        this.meta = meta;\n    }\n    toString() {\n        return `${this.file}:${this.reason}`;\n    }\n}\nexports.MergeSummaryConflict = MergeSummaryConflict;\nclass MergeSummaryDetail {\n    constructor() {\n        this.conflicts = [];\n        this.merges = [];\n        this.result = 'success';\n    }\n    get failed() {\n        return this.conflicts.length > 0;\n    }\n    get reason() {\n        return this.result;\n    }\n    toString() {\n        if (this.conflicts.length) {\n            return `CONFLICTS: ${this.conflicts.join(', ')}`;\n        }\n        return 'OK';\n    }\n}\nexports.MergeSummaryDetail = MergeSummaryDetail;\n//# sourceMappingURL=MergeSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PullSummary = void 0;\nclass PullSummary {\n    constructor() {\n        this.remoteMessages = {\n            all: [],\n        };\n        this.created = [];\n        this.deleted = [];\n        this.files = [];\n        this.deletions = {};\n        this.insertions = {};\n        this.summary = {\n            changes: 0,\n            deletions: 0,\n            insertions: 0,\n        };\n    }\n}\nexports.PullSummary = PullSummary;\n//# sourceMappingURL=PullSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseStatusSummary = exports.StatusSummary = void 0;\nconst utils_1 = require(\"../utils\");\nconst FileStatusSummary_1 = require(\"./FileStatusSummary\");\n/**\n * The StatusSummary is returned as a response to getting `git().status()`\n */\nclass StatusSummary {\n    constructor() {\n        this.not_added = [];\n        this.conflicted = [];\n        this.created = [];\n        this.deleted = [];\n        this.modified = [];\n        this.renamed = [];\n        /**\n         * All files represented as an array of objects containing the `path` and status in `index` and\n         * in the `working_dir`.\n         */\n        this.files = [];\n        this.staged = [];\n        /**\n         * Number of commits ahead of the tracked branch\n         */\n        this.ahead = 0;\n        /**\n         *Number of commits behind the tracked branch\n         */\n        this.behind = 0;\n        /**\n         * Name of the current branch\n         */\n        this.current = null;\n        /**\n         * Name of the branch being tracked\n         */\n        this.tracking = null;\n    }\n    /**\n     * Gets whether this StatusSummary represents a clean working branch.\n     */\n    isClean() {\n        return !this.files.length;\n    }\n}\nexports.StatusSummary = StatusSummary;\nvar PorcelainFileStatus;\n(function (PorcelainFileStatus) {\n    PorcelainFileStatus[\"ADDED\"] = \"A\";\n    PorcelainFileStatus[\"DELETED\"] = \"D\";\n    PorcelainFileStatus[\"MODIFIED\"] = \"M\";\n    PorcelainFileStatus[\"RENAMED\"] = \"R\";\n    PorcelainFileStatus[\"COPIED\"] = \"C\";\n    PorcelainFileStatus[\"UNMERGED\"] = \"U\";\n    PorcelainFileStatus[\"UNTRACKED\"] = \"?\";\n    PorcelainFileStatus[\"IGNORED\"] = \"!\";\n    PorcelainFileStatus[\"NONE\"] = \" \";\n})(PorcelainFileStatus || (PorcelainFileStatus = {}));\nfunction renamedFile(line) {\n    const detail = /^(.+) -> (.+)$/.exec(line);\n    if (!detail) {\n        return {\n            from: line, to: line\n        };\n    }\n    return {\n        from: String(detail[1]),\n        to: String(detail[2]),\n    };\n}\nfunction parser(indexX, indexY, handler) {\n    return [`${indexX}${indexY}`, handler];\n}\nfunction conflicts(indexX, ...indexY) {\n    return indexY.map(y => parser(indexX, y, (result, file) => utils_1.append(result.conflicted, file)));\n}\nconst parsers = new Map([\n    parser(PorcelainFileStatus.NONE, PorcelainFileStatus.ADDED, (result, file) => utils_1.append(result.created, file)),\n    parser(PorcelainFileStatus.NONE, PorcelainFileStatus.DELETED, (result, file) => utils_1.append(result.deleted, file)),\n    parser(PorcelainFileStatus.NONE, PorcelainFileStatus.MODIFIED, (result, file) => utils_1.append(result.modified, file)),\n    parser(PorcelainFileStatus.ADDED, PorcelainFileStatus.NONE, (result, file) => utils_1.append(result.created, file) && utils_1.append(result.staged, file)),\n    parser(PorcelainFileStatus.ADDED, PorcelainFileStatus.MODIFIED, (result, file) => utils_1.append(result.created, file) && utils_1.append(result.staged, file) && utils_1.append(result.modified, file)),\n    parser(PorcelainFileStatus.DELETED, PorcelainFileStatus.NONE, (result, file) => utils_1.append(result.deleted, file) && utils_1.append(result.staged, file)),\n    parser(PorcelainFileStatus.MODIFIED, PorcelainFileStatus.NONE, (result, file) => utils_1.append(result.modified, file) && utils_1.append(result.staged, file)),\n    parser(PorcelainFileStatus.MODIFIED, PorcelainFileStatus.MODIFIED, (result, file) => utils_1.append(result.modified, file) && utils_1.append(result.staged, file)),\n    parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.NONE, (result, file) => {\n        utils_1.append(result.renamed, renamedFile(file));\n    }),\n    parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.MODIFIED, (result, file) => {\n        const renamed = renamedFile(file);\n        utils_1.append(result.renamed, renamed);\n        utils_1.append(result.modified, renamed.to);\n    }),\n    parser(PorcelainFileStatus.UNTRACKED, PorcelainFileStatus.UNTRACKED, (result, file) => utils_1.append(result.not_added, file)),\n    ...conflicts(PorcelainFileStatus.ADDED, PorcelainFileStatus.ADDED, PorcelainFileStatus.UNMERGED),\n    ...conflicts(PorcelainFileStatus.DELETED, PorcelainFileStatus.DELETED, PorcelainFileStatus.UNMERGED),\n    ...conflicts(PorcelainFileStatus.UNMERGED, PorcelainFileStatus.ADDED, PorcelainFileStatus.DELETED, PorcelainFileStatus.UNMERGED),\n    ['##', (result, line) => {\n            const aheadReg = /ahead (\\d+)/;\n            const behindReg = /behind (\\d+)/;\n            const currentReg = /^(.+?(?=(?:\\.{3}|\\s|$)))/;\n            const trackingReg = /\\.{3}(\\S*)/;\n            const onEmptyBranchReg = /\\son\\s([\\S]+)$/;\n            let regexResult;\n            regexResult = aheadReg.exec(line);\n            result.ahead = regexResult && +regexResult[1] || 0;\n            regexResult = behindReg.exec(line);\n            result.behind = regexResult && +regexResult[1] || 0;\n            regexResult = currentReg.exec(line);\n            result.current = regexResult && regexResult[1];\n            regexResult = trackingReg.exec(line);\n            result.tracking = regexResult && regexResult[1];\n            regexResult = onEmptyBranchReg.exec(line);\n            result.current = regexResult && regexResult[1] || result.current;\n        }]\n]);\nconst parseStatusSummary = function (text) {\n    const lines = text.trim().split('\\n');\n    const status = new StatusSummary();\n    for (let i = 0, l = lines.length; i < l; i++) {\n        splitLine(status, lines[i]);\n    }\n    return status;\n};\nexports.parseStatusSummary = parseStatusSummary;\nfunction splitLine(result, lineStr) {\n    const trimmed = lineStr.trim();\n    switch (' ') {\n        case trimmed.charAt(2):\n            return data(trimmed.charAt(0), trimmed.charAt(1), trimmed.substr(3));\n        case trimmed.charAt(1):\n            return data(PorcelainFileStatus.NONE, trimmed.charAt(0), trimmed.substr(2));\n        default:\n            return;\n    }\n    function data(index, workingDir, path) {\n        const raw = `${index}${workingDir}`;\n        const handler = parsers.get(raw);\n        if (handler) {\n            handler(result, path);\n        }\n        if (raw !== '##') {\n            result.files.push(new FileStatusSummary_1.FileStatusSummary(path, index, workingDir));\n        }\n    }\n}\n//# sourceMappingURL=StatusSummary.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTagList = exports.TagList = void 0;\nclass TagList {\n    constructor(all, latest) {\n        this.all = all;\n        this.latest = latest;\n    }\n}\nexports.TagList = TagList;\nconst parseTagList = function (data, customSort = false) {\n    const tags = data\n        .split('\\n')\n        .map(trimmed)\n        .filter(Boolean);\n    if (!customSort) {\n        tags.sort(function (tagA, tagB) {\n            const partsA = tagA.split('.');\n            const partsB = tagB.split('.');\n            if (partsA.length === 1 || partsB.length === 1) {\n                return singleSorted(toNumber(partsA[0]), toNumber(partsB[0]));\n            }\n            for (let i = 0, l = Math.max(partsA.length, partsB.length); i < l; i++) {\n                const diff = sorted(toNumber(partsA[i]), toNumber(partsB[i]));\n                if (diff) {\n                    return diff;\n                }\n            }\n            return 0;\n        });\n    }\n    const latest = customSort ? tags[0] : [...tags].reverse().find((tag) => tag.indexOf('.') >= 0);\n    return new TagList(tags, latest);\n};\nexports.parseTagList = parseTagList;\nfunction singleSorted(a, b) {\n    const aIsNum = isNaN(a);\n    const bIsNum = isNaN(b);\n    if (aIsNum !== bIsNum) {\n        return aIsNum ? 1 : -1;\n    }\n    return aIsNum ? sorted(a, b) : 0;\n}\nfunction sorted(a, b) {\n    return a === b ? 0 : a > b ? 1 : -1;\n}\nfunction trimmed(input) {\n    return input.trim();\n}\nfunction toNumber(input) {\n    if (typeof input === 'string') {\n        return parseInt(input.replace(/^\\D+/g, ''), 10) || 0;\n    }\n    return 0;\n}\n//# sourceMappingURL=TagList.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitExecutorChain = void 0;\nconst child_process_1 = require(\"child_process\");\nconst git_error_1 = require(\"../errors/git-error\");\nconst task_1 = require(\"../tasks/task\");\nconst utils_1 = require(\"../utils\");\nconst tasks_pending_queue_1 = require(\"./tasks-pending-queue\");\nclass GitExecutorChain {\n    constructor(_executor, _scheduler, _plugins) {\n        this._executor = _executor;\n        this._scheduler = _scheduler;\n        this._plugins = _plugins;\n        this._chain = Promise.resolve();\n        this._queue = new tasks_pending_queue_1.TasksPendingQueue();\n    }\n    get binary() {\n        return this._executor.binary;\n    }\n    get cwd() {\n        return this._executor.cwd;\n    }\n    get env() {\n        return this._executor.env;\n    }\n    get outputHandler() {\n        return this._executor.outputHandler;\n    }\n    chain() {\n        return this;\n    }\n    push(task) {\n        this._queue.push(task);\n        return this._chain = this._chain.then(() => this.attemptTask(task));\n    }\n    attemptTask(task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const onScheduleComplete = yield this._scheduler.next();\n            const onQueueComplete = () => this._queue.complete(task);\n            try {\n                const { logger } = this._queue.attempt(task);\n                return yield (task_1.isEmptyTask(task)\n                    ? this.attemptEmptyTask(task, logger)\n                    : this.attemptRemoteTask(task, logger));\n            }\n            catch (e) {\n                throw this.onFatalException(task, e);\n            }\n            finally {\n                onQueueComplete();\n                onScheduleComplete();\n            }\n        });\n    }\n    onFatalException(task, e) {\n        const gitError = (e instanceof git_error_1.GitError) ? Object.assign(e, { task }) : new git_error_1.GitError(task, e && String(e));\n        this._chain = Promise.resolve();\n        this._queue.fatal(gitError);\n        return gitError;\n    }\n    attemptRemoteTask(task, logger) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const args = this._plugins.exec('spawn.args', [...task.commands], pluginContext(task, task.commands));\n            const raw = yield this.gitResponse(task, this.binary, args, this.outputHandler, logger.step('SPAWN'));\n            const outputStreams = yield this.handleTaskData(task, args, raw, logger.step('HANDLE'));\n            logger(`passing response to task's parser as a %s`, task.format);\n            if (task_1.isBufferTask(task)) {\n                return utils_1.callTaskParser(task.parser, outputStreams);\n            }\n            return utils_1.callTaskParser(task.parser, outputStreams.asStrings());\n        });\n    }\n    attemptEmptyTask(task, logger) {\n        return __awaiter(this, void 0, void 0, function* () {\n            logger(`empty task bypassing child process to call to task's parser`);\n            return task.parser();\n        });\n    }\n    handleTaskData(task, args, result, logger) {\n        const { exitCode, rejection, stdOut, stdErr } = result;\n        return new Promise((done, fail) => {\n            logger(`Preparing to handle process response exitCode=%d stdOut=`, exitCode);\n            const { error } = this._plugins.exec('task.error', { error: rejection }, Object.assign(Object.assign({}, pluginContext(task, args)), result));\n            if (error && task.onError) {\n                logger.info(`exitCode=%s handling with custom error handler`);\n                return task.onError(result, error, (newStdOut) => {\n                    logger.info(`custom error handler treated as success`);\n                    logger(`custom error returned a %s`, utils_1.objectToString(newStdOut));\n                    done(new utils_1.GitOutputStreams(Array.isArray(newStdOut) ? Buffer.concat(newStdOut) : newStdOut, Buffer.concat(stdErr)));\n                }, fail);\n            }\n            if (error) {\n                logger.info(`handling as error: exitCode=%s stdErr=%s rejection=%o`, exitCode, stdErr.length, rejection);\n                return fail(error);\n            }\n            logger.info(`retrieving task output complete`);\n            done(new utils_1.GitOutputStreams(Buffer.concat(stdOut), Buffer.concat(stdErr)));\n        });\n    }\n    gitResponse(task, command, args, outputHandler, logger) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const outputLogger = logger.sibling('output');\n            const spawnOptions = {\n                cwd: this.cwd,\n                env: this.env,\n                windowsHide: true,\n            };\n            return new Promise((done) => {\n                const stdOut = [];\n                const stdErr = [];\n                let attempted = false;\n                let rejection;\n                function attemptClose(exitCode, event = 'retry') {\n                    // closing when there is content, terminate immediately\n                    if (attempted || stdErr.length || stdOut.length) {\n                        logger.info(`exitCode=%s event=%s rejection=%o`, exitCode, event, rejection);\n                        done({\n                            stdOut,\n                            stdErr,\n                            exitCode,\n                            rejection,\n                        });\n                        attempted = true;\n                    }\n                    // first attempt at closing but no content yet, wait briefly for the close/exit that may follow\n                    if (!attempted) {\n                        attempted = true;\n                        setTimeout(() => attemptClose(exitCode, 'deferred'), 50);\n                        logger('received %s event before content on stdOut/stdErr', event);\n                    }\n                }\n                logger.info(`%s %o`, command, args);\n                logger('%O', spawnOptions);\n                const spawned = child_process_1.spawn(command, args, spawnOptions);\n                spawned.stdout.on('data', onDataReceived(stdOut, 'stdOut', logger, outputLogger.step('stdOut')));\n                spawned.stderr.on('data', onDataReceived(stdErr, 'stdErr', logger, outputLogger.step('stdErr')));\n                spawned.on('error', onErrorReceived(stdErr, logger));\n                spawned.on('close', (code) => attemptClose(code, 'close'));\n                spawned.on('exit', (code) => attemptClose(code, 'exit'));\n                if (outputHandler) {\n                    logger(`Passing child process stdOut/stdErr to custom outputHandler`);\n                    outputHandler(command, spawned.stdout, spawned.stderr, [...args]);\n                }\n                this._plugins.exec('spawn.after', undefined, Object.assign(Object.assign({}, pluginContext(task, args)), { spawned, kill(reason) {\n                        if (spawned.killed) {\n                            return;\n                        }\n                        rejection = reason;\n                        spawned.kill('SIGINT');\n                    } }));\n            });\n        });\n    }\n}\nexports.GitExecutorChain = GitExecutorChain;\nfunction pluginContext(task, commands) {\n    return {\n        method: utils_1.first(task.commands) || '',\n        commands,\n    };\n}\nfunction onErrorReceived(target, logger) {\n    return (err) => {\n        logger(`[ERROR] child process exception %o`, err);\n        target.push(Buffer.from(String(err.stack), 'ascii'));\n    };\n}\nfunction onDataReceived(target, name, logger, output) {\n    return (buffer) => {\n        logger(`%s received %L bytes`, name, buffer);\n        output(`%B`, buffer);\n        target.push(buffer);\n    };\n}\n//# sourceMappingURL=git-executor-chain.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitExecutor = void 0;\nconst git_executor_chain_1 = require(\"./git-executor-chain\");\nclass GitExecutor {\n    constructor(binary = 'git', cwd, _scheduler, _plugins) {\n        this.binary = binary;\n        this.cwd = cwd;\n        this._scheduler = _scheduler;\n        this._plugins = _plugins;\n        this._chain = new git_executor_chain_1.GitExecutorChain(this, this._scheduler, this._plugins);\n    }\n    chain() {\n        return new git_executor_chain_1.GitExecutorChain(this, this._scheduler, this._plugins);\n    }\n    push(task) {\n        return this._chain.push(task);\n    }\n}\nexports.GitExecutor = GitExecutor;\n//# sourceMappingURL=git-executor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gitP = void 0;\nconst git_response_error_1 = require(\"../errors/git-response-error\");\nconst git_factory_1 = require(\"../git-factory\");\nconst functionNamesBuilderApi = [\n    'customBinary', 'env', 'outputHandler', 'silent',\n];\nconst functionNamesPromiseApi = [\n    'add',\n    'addAnnotatedTag',\n    'addConfig',\n    'addRemote',\n    'addTag',\n    'applyPatch',\n    'binaryCatFile',\n    'branch',\n    'branchLocal',\n    'catFile',\n    'checkIgnore',\n    'checkIsRepo',\n    'checkout',\n    'checkoutBranch',\n    'checkoutLatestTag',\n    'checkoutLocalBranch',\n    'clean',\n    'clone',\n    'commit',\n    'cwd',\n    'deleteLocalBranch',\n    'deleteLocalBranches',\n    'diff',\n    'diffSummary',\n    'exec',\n    'fetch',\n    'getRemotes',\n    'init',\n    'listConfig',\n    'listRemote',\n    'log',\n    'merge',\n    'mergeFromTo',\n    'mirror',\n    'mv',\n    'pull',\n    'push',\n    'pushTags',\n    'raw',\n    'rebase',\n    'remote',\n    'removeRemote',\n    'reset',\n    'revert',\n    'revparse',\n    'rm',\n    'rmKeepLocal',\n    'show',\n    'stash',\n    'stashList',\n    'status',\n    'subModule',\n    'submoduleAdd',\n    'submoduleInit',\n    'submoduleUpdate',\n    'tag',\n    'tags',\n    'updateServerInfo'\n];\nfunction gitP(...args) {\n    let git;\n    let chain = Promise.resolve();\n    try {\n        git = git_factory_1.gitInstanceFactory(...args);\n    }\n    catch (e) {\n        chain = Promise.reject(e);\n    }\n    function builderReturn() {\n        return promiseApi;\n    }\n    function chainReturn() {\n        return chain;\n    }\n    const promiseApi = [...functionNamesBuilderApi, ...functionNamesPromiseApi].reduce((api, name) => {\n        const isAsync = functionNamesPromiseApi.includes(name);\n        const valid = isAsync ? asyncWrapper(name, git) : syncWrapper(name, git, api);\n        const alternative = isAsync ? chainReturn : builderReturn;\n        Object.defineProperty(api, name, {\n            enumerable: false,\n            configurable: false,\n            value: git ? valid : alternative,\n        });\n        return api;\n    }, {});\n    return promiseApi;\n    function asyncWrapper(fn, git) {\n        return function (...args) {\n            if (typeof args[args.length] === 'function') {\n                throw new TypeError('Promise interface requires that handlers are not supplied inline, ' +\n                    'trailing function not allowed in call to ' + fn);\n            }\n            return chain.then(function () {\n                return new Promise(function (resolve, reject) {\n                    const callback = (err, result) => {\n                        if (err) {\n                            return reject(toError(err));\n                        }\n                        resolve(result);\n                    };\n                    args.push(callback);\n                    git[fn].apply(git, args);\n                });\n            });\n        };\n    }\n    function syncWrapper(fn, git, api) {\n        return (...args) => {\n            git[fn](...args);\n            return api;\n        };\n    }\n}\nexports.gitP = gitP;\nfunction toError(error) {\n    if (error instanceof Error) {\n        return error;\n    }\n    if (typeof error === 'string') {\n        return new Error(error);\n    }\n    return new git_response_error_1.GitResponseError(error);\n}\n//# sourceMappingURL=promise-wrapped.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scheduler = void 0;\nconst utils_1 = require(\"../utils\");\nconst promise_deferred_1 = require(\"@kwsites/promise-deferred\");\nconst git_logger_1 = require(\"../git-logger\");\nconst createScheduledTask = (() => {\n    let id = 0;\n    return () => {\n        id++;\n        const { promise, done } = promise_deferred_1.createDeferred();\n        return {\n            promise,\n            done,\n            id,\n        };\n    };\n})();\nclass Scheduler {\n    constructor(concurrency = 2) {\n        this.concurrency = concurrency;\n        this.logger = git_logger_1.createLogger('', 'scheduler');\n        this.pending = [];\n        this.running = [];\n        this.logger(`Constructed, concurrency=%s`, concurrency);\n    }\n    schedule() {\n        if (!this.pending.length || this.running.length >= this.concurrency) {\n            this.logger(`Schedule attempt ignored, pending=%s running=%s concurrency=%s`, this.pending.length, this.running.length, this.concurrency);\n            return;\n        }\n        const task = utils_1.append(this.running, this.pending.shift());\n        this.logger(`Attempting id=%s`, task.id);\n        task.done(() => {\n            this.logger(`Completing id=`, task.id);\n            utils_1.remove(this.running, task);\n            this.schedule();\n        });\n    }\n    next() {\n        const { promise, id } = utils_1.append(this.pending, createScheduledTask());\n        this.logger(`Scheduling id=%s`, id);\n        this.schedule();\n        return promise;\n    }\n}\nexports.Scheduler = Scheduler;\n//# sourceMappingURL=scheduler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TasksPendingQueue = void 0;\nconst git_error_1 = require(\"../errors/git-error\");\nconst git_logger_1 = require(\"../git-logger\");\nclass TasksPendingQueue {\n    constructor(logLabel = 'GitExecutor') {\n        this.logLabel = logLabel;\n        this._queue = new Map();\n    }\n    withProgress(task) {\n        return this._queue.get(task);\n    }\n    createProgress(task) {\n        const name = TasksPendingQueue.getName(task.commands[0]);\n        const logger = git_logger_1.createLogger(this.logLabel, name);\n        return {\n            task,\n            logger,\n            name,\n        };\n    }\n    push(task) {\n        const progress = this.createProgress(task);\n        progress.logger('Adding task to the queue, commands = %o', task.commands);\n        this._queue.set(task, progress);\n        return progress;\n    }\n    fatal(err) {\n        for (const [task, { logger }] of Array.from(this._queue.entries())) {\n            if (task === err.task) {\n                logger.info(`Failed %o`, err);\n                logger(`Fatal exception, any as-yet un-started tasks run through this executor will not be attempted`);\n            }\n            else {\n                logger.info(`A fatal exception occurred in a previous task, the queue has been purged: %o`, err.message);\n            }\n            this.complete(task);\n        }\n        if (this._queue.size !== 0) {\n            throw new Error(`Queue size should be zero after fatal: ${this._queue.size}`);\n        }\n    }\n    complete(task) {\n        const progress = this.withProgress(task);\n        if (progress) {\n            this._queue.delete(task);\n        }\n    }\n    attempt(task) {\n        const progress = this.withProgress(task);\n        if (!progress) {\n            throw new git_error_1.GitError(undefined, 'TasksPendingQueue: attempt called for an unknown task');\n        }\n        progress.logger('Starting task');\n        return progress;\n    }\n    static getName(name = 'empty') {\n        return `task:${name}:${++TasksPendingQueue.counter}`;\n    }\n}\nexports.TasksPendingQueue = TasksPendingQueue;\nTasksPendingQueue.counter = 0;\n//# sourceMappingURL=tasks-pending-queue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimpleGitApi = void 0;\nconst task_callback_1 = require(\"./task-callback\");\nconst push_1 = require(\"./tasks/push\");\nconst task_1 = require(\"./tasks/task\");\nconst utils_1 = require(\"./utils\");\nclass SimpleGitApi {\n    constructor(_executor) {\n        this._executor = _executor;\n    }\n    _runTask(task, then) {\n        const chain = this._executor.chain();\n        const promise = chain.push(task);\n        if (then) {\n            task_callback_1.taskCallback(task, promise, then);\n        }\n        return Object.create(this, {\n            then: { value: promise.then.bind(promise) },\n            catch: { value: promise.catch.bind(promise) },\n            _executor: { value: chain },\n        });\n    }\n    add(files) {\n        return this._runTask(task_1.straightThroughStringTask(['add', ...utils_1.asArray(files)]), utils_1.trailingFunctionArgument(arguments));\n    }\n    push() {\n        const task = push_1.pushTask({\n            remote: utils_1.filterType(arguments[0], utils_1.filterString),\n            branch: utils_1.filterType(arguments[1], utils_1.filterString),\n        }, utils_1.getTrailingOptions(arguments));\n        return this._runTask(task, utils_1.trailingFunctionArgument(arguments));\n    }\n}\nexports.SimpleGitApi = SimpleGitApi;\n//# sourceMappingURL=simple-git-api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.taskCallback = void 0;\nconst git_response_error_1 = require(\"./errors/git-response-error\");\nconst utils_1 = require(\"./utils\");\nfunction taskCallback(task, response, callback = utils_1.NOOP) {\n    const onSuccess = (data) => {\n        callback(null, data);\n    };\n    const onError = (err) => {\n        if ((err === null || err === void 0 ? void 0 : err.task) === task) {\n            if (err instanceof git_response_error_1.GitResponseError) {\n                return callback(addDeprecationNoticeToError(err));\n            }\n            callback(err);\n        }\n    };\n    response.then(onSuccess, onError);\n}\nexports.taskCallback = taskCallback;\nfunction addDeprecationNoticeToError(err) {\n    let log = (name) => {\n        console.warn(`simple-git deprecation notice: accessing GitResponseError.${name} should be GitResponseError.git.${name}, this will no longer be available in version 3`);\n        log = utils_1.NOOP;\n    };\n    return Object.create(err, Object.getOwnPropertyNames(err.git).reduce(descriptorReducer, {}));\n    function descriptorReducer(all, name) {\n        if (name in err) {\n            return all;\n        }\n        all[name] = {\n            enumerable: false,\n            configurable: false,\n            get() {\n                log(name);\n                return err.git[name];\n            },\n        };\n        return all;\n    }\n}\n//# sourceMappingURL=task-callback.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyPatchTask = void 0;\nconst task_1 = require(\"./task\");\nfunction applyPatchTask(patches, customArgs) {\n    return task_1.straightThroughStringTask(['apply', ...customArgs, ...patches]);\n}\nexports.applyPatchTask = applyPatchTask;\n//# sourceMappingURL=apply-patch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deleteBranchTask = exports.deleteBranchesTask = exports.branchLocalTask = exports.branchTask = exports.containsDeleteBranchCommand = void 0;\nconst git_response_error_1 = require(\"../errors/git-response-error\");\nconst parse_branch_delete_1 = require(\"../parsers/parse-branch-delete\");\nconst parse_branch_1 = require(\"../parsers/parse-branch\");\nconst utils_1 = require(\"../utils\");\nfunction containsDeleteBranchCommand(commands) {\n    const deleteCommands = ['-d', '-D', '--delete'];\n    return commands.some(command => deleteCommands.includes(command));\n}\nexports.containsDeleteBranchCommand = containsDeleteBranchCommand;\nfunction branchTask(customArgs) {\n    const isDelete = containsDeleteBranchCommand(customArgs);\n    const commands = ['branch', ...customArgs];\n    if (commands.length === 1) {\n        commands.push('-a');\n    }\n    if (!commands.includes('-v')) {\n        commands.splice(1, 0, '-v');\n    }\n    return {\n        format: 'utf-8',\n        commands,\n        parser(stdOut, stdErr) {\n            if (isDelete) {\n                return parse_branch_delete_1.parseBranchDeletions(stdOut, stdErr).all[0];\n            }\n            return parse_branch_1.parseBranchSummary(stdOut);\n        },\n    };\n}\nexports.branchTask = branchTask;\nfunction branchLocalTask() {\n    const parser = parse_branch_1.parseBranchSummary;\n    return {\n        format: 'utf-8',\n        commands: ['branch', '-v'],\n        parser,\n    };\n}\nexports.branchLocalTask = branchLocalTask;\nfunction deleteBranchesTask(branches, forceDelete = false) {\n    return {\n        format: 'utf-8',\n        commands: ['branch', '-v', forceDelete ? '-D' : '-d', ...branches],\n        parser(stdOut, stdErr) {\n            return parse_branch_delete_1.parseBranchDeletions(stdOut, stdErr);\n        },\n        onError({ exitCode, stdOut }, error, done, fail) {\n            if (!parse_branch_delete_1.hasBranchDeletionError(String(error), exitCode)) {\n                return fail(error);\n            }\n            done(stdOut);\n        },\n    };\n}\nexports.deleteBranchesTask = deleteBranchesTask;\nfunction deleteBranchTask(branch, forceDelete = false) {\n    const task = {\n        format: 'utf-8',\n        commands: ['branch', '-v', forceDelete ? '-D' : '-d', branch],\n        parser(stdOut, stdErr) {\n            return parse_branch_delete_1.parseBranchDeletions(stdOut, stdErr).branches[branch];\n        },\n        onError({ exitCode, stdErr, stdOut }, error, _, fail) {\n            if (!parse_branch_delete_1.hasBranchDeletionError(String(error), exitCode)) {\n                return fail(error);\n            }\n            throw new git_response_error_1.GitResponseError(task.parser(utils_1.bufferToString(stdOut), utils_1.bufferToString(stdErr)), String(error));\n        },\n    };\n    return task;\n}\nexports.deleteBranchTask = deleteBranchTask;\n//# sourceMappingURL=branch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkIgnoreTask = void 0;\nconst CheckIgnore_1 = require(\"../responses/CheckIgnore\");\nfunction checkIgnoreTask(paths) {\n    return {\n        commands: ['check-ignore', ...paths],\n        format: 'utf-8',\n        parser: CheckIgnore_1.parseCheckIgnore,\n    };\n}\nexports.checkIgnoreTask = checkIgnoreTask;\n//# sourceMappingURL=check-ignore.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkIsBareRepoTask = exports.checkIsRepoRootTask = exports.checkIsRepoTask = exports.CheckRepoActions = void 0;\nconst utils_1 = require(\"../utils\");\nvar CheckRepoActions;\n(function (CheckRepoActions) {\n    CheckRepoActions[\"BARE\"] = \"bare\";\n    CheckRepoActions[\"IN_TREE\"] = \"tree\";\n    CheckRepoActions[\"IS_REPO_ROOT\"] = \"root\";\n})(CheckRepoActions = exports.CheckRepoActions || (exports.CheckRepoActions = {}));\nconst onError = ({ exitCode }, error, done, fail) => {\n    if (exitCode === utils_1.ExitCodes.UNCLEAN && isNotRepoMessage(error)) {\n        return done(Buffer.from('false'));\n    }\n    fail(error);\n};\nconst parser = (text) => {\n    return text.trim() === 'true';\n};\nfunction checkIsRepoTask(action) {\n    switch (action) {\n        case CheckRepoActions.BARE:\n            return checkIsBareRepoTask();\n        case CheckRepoActions.IS_REPO_ROOT:\n            return checkIsRepoRootTask();\n    }\n    const commands = ['rev-parse', '--is-inside-work-tree'];\n    return {\n        commands,\n        format: 'utf-8',\n        onError,\n        parser,\n    };\n}\nexports.checkIsRepoTask = checkIsRepoTask;\nfunction checkIsRepoRootTask() {\n    const commands = ['rev-parse', '--git-dir'];\n    return {\n        commands,\n        format: 'utf-8',\n        onError,\n        parser(path) {\n            return /^\\.(git)?$/.test(path.trim());\n        },\n    };\n}\nexports.checkIsRepoRootTask = checkIsRepoRootTask;\nfunction checkIsBareRepoTask() {\n    const commands = ['rev-parse', '--is-bare-repository'];\n    return {\n        commands,\n        format: 'utf-8',\n        onError,\n        parser,\n    };\n}\nexports.checkIsBareRepoTask = checkIsBareRepoTask;\nfunction isNotRepoMessage(error) {\n    return /(Not a git repository|Kein Git-Repository)/i.test(String(error));\n}\n//# sourceMappingURL=check-is-repo.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isCleanOptionsArray = exports.cleanTask = exports.cleanWithOptionsTask = exports.CleanOptions = exports.CONFIG_ERROR_UNKNOWN_OPTION = exports.CONFIG_ERROR_MODE_REQUIRED = exports.CONFIG_ERROR_INTERACTIVE_MODE = void 0;\nconst CleanSummary_1 = require(\"../responses/CleanSummary\");\nconst utils_1 = require(\"../utils\");\nconst task_1 = require(\"./task\");\nexports.CONFIG_ERROR_INTERACTIVE_MODE = 'Git clean interactive mode is not supported';\nexports.CONFIG_ERROR_MODE_REQUIRED = 'Git clean mode parameter (\"n\" or \"f\") is required';\nexports.CONFIG_ERROR_UNKNOWN_OPTION = 'Git clean unknown option found in: ';\n/**\n * All supported option switches available for use in a `git.clean` operation\n */\nvar CleanOptions;\n(function (CleanOptions) {\n    CleanOptions[\"DRY_RUN\"] = \"n\";\n    CleanOptions[\"FORCE\"] = \"f\";\n    CleanOptions[\"IGNORED_INCLUDED\"] = \"x\";\n    CleanOptions[\"IGNORED_ONLY\"] = \"X\";\n    CleanOptions[\"EXCLUDING\"] = \"e\";\n    CleanOptions[\"QUIET\"] = \"q\";\n    CleanOptions[\"RECURSIVE\"] = \"d\";\n})(CleanOptions = exports.CleanOptions || (exports.CleanOptions = {}));\nconst CleanOptionValues = new Set(['i', ...utils_1.asStringArray(Object.values(CleanOptions))]);\nfunction cleanWithOptionsTask(mode, customArgs) {\n    const { cleanMode, options, valid } = getCleanOptions(mode);\n    if (!cleanMode) {\n        return task_1.configurationErrorTask(exports.CONFIG_ERROR_MODE_REQUIRED);\n    }\n    if (!valid.options) {\n        return task_1.configurationErrorTask(exports.CONFIG_ERROR_UNKNOWN_OPTION + JSON.stringify(mode));\n    }\n    options.push(...customArgs);\n    if (options.some(isInteractiveMode)) {\n        return task_1.configurationErrorTask(exports.CONFIG_ERROR_INTERACTIVE_MODE);\n    }\n    return cleanTask(cleanMode, options);\n}\nexports.cleanWithOptionsTask = cleanWithOptionsTask;\nfunction cleanTask(mode, customArgs) {\n    const commands = ['clean', `-${mode}`, ...customArgs];\n    return {\n        commands,\n        format: 'utf-8',\n        parser(text) {\n            return CleanSummary_1.cleanSummaryParser(mode === CleanOptions.DRY_RUN, text);\n        }\n    };\n}\nexports.cleanTask = cleanTask;\nfunction isCleanOptionsArray(input) {\n    return Array.isArray(input) && input.every(test => CleanOptionValues.has(test));\n}\nexports.isCleanOptionsArray = isCleanOptionsArray;\nfunction getCleanOptions(input) {\n    let cleanMode;\n    let options = [];\n    let valid = { cleanMode: false, options: true };\n    input.replace(/[^a-z]i/g, '').split('').forEach(char => {\n        if (isCleanMode(char)) {\n            cleanMode = char;\n            valid.cleanMode = true;\n        }\n        else {\n            valid.options = valid.options && isKnownOption(options[options.length] = (`-${char}`));\n        }\n    });\n    return {\n        cleanMode,\n        options,\n        valid,\n    };\n}\nfunction isCleanMode(cleanMode) {\n    return cleanMode === CleanOptions.FORCE || cleanMode === CleanOptions.DRY_RUN;\n}\nfunction isKnownOption(option) {\n    return /^-[a-z]$/i.test(option) && CleanOptionValues.has(option.charAt(1));\n}\nfunction isInteractiveMode(option) {\n    if (/^-[^\\-]/.test(option)) {\n        return option.indexOf('i') > 0;\n    }\n    return option === '--interactive';\n}\n//# sourceMappingURL=clean.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneMirrorTask = exports.cloneTask = void 0;\nconst task_1 = require(\"./task\");\nconst utils_1 = require(\"../utils\");\nfunction cloneTask(repo, directory, customArgs) {\n    const commands = ['clone', ...customArgs];\n    if (typeof repo === 'string') {\n        commands.push(repo);\n    }\n    if (typeof directory === 'string') {\n        commands.push(directory);\n    }\n    return task_1.straightThroughStringTask(commands);\n}\nexports.cloneTask = cloneTask;\nfunction cloneMirrorTask(repo, directory, customArgs) {\n    utils_1.append(customArgs, '--mirror');\n    return cloneTask(repo, directory, customArgs);\n}\nexports.cloneMirrorTask = cloneMirrorTask;\n//# sourceMappingURL=clone.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.commitTask = void 0;\nconst parse_commit_1 = require(\"../parsers/parse-commit\");\nfunction commitTask(message, files, customArgs) {\n    const commands = ['commit'];\n    message.forEach((m) => commands.push('-m', m));\n    commands.push(...files, ...customArgs);\n    return {\n        commands,\n        format: 'utf-8',\n        parser: parse_commit_1.parseCommitResult,\n    };\n}\nexports.commitTask = commitTask;\n//# sourceMappingURL=commit.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.listConfigTask = exports.addConfigTask = void 0;\nconst ConfigList_1 = require(\"../responses/ConfigList\");\nfunction addConfigTask(key, value, append = false) {\n    const commands = ['config', '--local'];\n    if (append) {\n        commands.push('--add');\n    }\n    commands.push(key, value);\n    return {\n        commands,\n        format: 'utf-8',\n        parser(text) {\n            return text;\n        }\n    };\n}\nexports.addConfigTask = addConfigTask;\nfunction listConfigTask() {\n    return {\n        commands: ['config', '--list', '--show-origin', '--null'],\n        format: 'utf-8',\n        parser(text) {\n            return ConfigList_1.configListParser(text);\n        },\n    };\n}\nexports.listConfigTask = listConfigTask;\n//# sourceMappingURL=config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diffSummaryTask = void 0;\nconst parse_diff_summary_1 = require(\"../parsers/parse-diff-summary\");\nfunction diffSummaryTask(customArgs) {\n    return {\n        commands: ['diff', '--stat=4096', ...customArgs],\n        format: 'utf-8',\n        parser(stdOut) {\n            return parse_diff_summary_1.parseDiffResult(stdOut);\n        }\n    };\n}\nexports.diffSummaryTask = diffSummaryTask;\n//# sourceMappingURL=diff.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fetchTask = void 0;\nconst parse_fetch_1 = require(\"../parsers/parse-fetch\");\nfunction fetchTask(remote, branch, customArgs) {\n    const commands = ['fetch', ...customArgs];\n    if (remote && branch) {\n        commands.push(remote, branch);\n    }\n    return {\n        commands,\n        format: 'utf-8',\n        parser: parse_fetch_1.parseFetchResult,\n    };\n}\nexports.fetchTask = fetchTask;\n//# sourceMappingURL=fetch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashObjectTask = void 0;\nconst task_1 = require(\"./task\");\n/**\n * Task used by `git.hashObject`\n */\nfunction hashObjectTask(filePath, write) {\n    const commands = ['hash-object', filePath];\n    if (write) {\n        commands.push('-w');\n    }\n    return task_1.straightThroughStringTask(commands, true);\n}\nexports.hashObjectTask = hashObjectTask;\n//# sourceMappingURL=hash-object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initTask = void 0;\nconst InitSummary_1 = require(\"../responses/InitSummary\");\nconst bareCommand = '--bare';\nfunction hasBareCommand(command) {\n    return command.includes(bareCommand);\n}\nfunction initTask(bare = false, path, customArgs) {\n    const commands = ['init', ...customArgs];\n    if (bare && !hasBareCommand(commands)) {\n        commands.splice(1, 0, bareCommand);\n    }\n    return {\n        commands,\n        format: 'utf-8',\n        parser(text) {\n            return InitSummary_1.parseInit(commands.includes('--bare'), path, text);\n        }\n    };\n}\nexports.initTask = initTask;\n//# sourceMappingURL=init.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.logTask = exports.parseLogOptions = void 0;\nconst parse_list_log_summary_1 = require(\"../parsers/parse-list-log-summary\");\nconst utils_1 = require(\"../utils\");\nvar excludeOptions;\n(function (excludeOptions) {\n    excludeOptions[excludeOptions[\"--pretty\"] = 0] = \"--pretty\";\n    excludeOptions[excludeOptions[\"max-count\"] = 1] = \"max-count\";\n    excludeOptions[excludeOptions[\"maxCount\"] = 2] = \"maxCount\";\n    excludeOptions[excludeOptions[\"n\"] = 3] = \"n\";\n    excludeOptions[excludeOptions[\"file\"] = 4] = \"file\";\n    excludeOptions[excludeOptions[\"format\"] = 5] = \"format\";\n    excludeOptions[excludeOptions[\"from\"] = 6] = \"from\";\n    excludeOptions[excludeOptions[\"to\"] = 7] = \"to\";\n    excludeOptions[excludeOptions[\"splitter\"] = 8] = \"splitter\";\n    excludeOptions[excludeOptions[\"symmetric\"] = 9] = \"symmetric\";\n    excludeOptions[excludeOptions[\"multiLine\"] = 10] = \"multiLine\";\n    excludeOptions[excludeOptions[\"strictDate\"] = 11] = \"strictDate\";\n})(excludeOptions || (excludeOptions = {}));\nfunction prettyFormat(format, splitter) {\n    const fields = [];\n    const formatStr = [];\n    Object.keys(format).forEach((field) => {\n        fields.push(field);\n        formatStr.push(String(format[field]));\n    });\n    return [\n        fields, formatStr.join(splitter)\n    ];\n}\nfunction userOptions(input) {\n    const output = Object.assign({}, input);\n    Object.keys(input).forEach(key => {\n        if (key in excludeOptions) {\n            delete output[key];\n        }\n    });\n    return output;\n}\nfunction parseLogOptions(opt = {}, customArgs = []) {\n    const splitter = opt.splitter || parse_list_log_summary_1.SPLITTER;\n    const format = opt.format || {\n        hash: '%H',\n        date: opt.strictDate === false ? '%ai' : '%aI',\n        message: '%s',\n        refs: '%D',\n        body: opt.multiLine ? '%B' : '%b',\n        author_name: '%aN',\n        author_email: '%ae'\n    };\n    const [fields, formatStr] = prettyFormat(format, splitter);\n    const suffix = [];\n    const command = [\n        `--pretty=format:${parse_list_log_summary_1.START_BOUNDARY}${formatStr}${parse_list_log_summary_1.COMMIT_BOUNDARY}`,\n        ...customArgs,\n    ];\n    const maxCount = opt.n || opt['max-count'] || opt.maxCount;\n    if (maxCount) {\n        command.push(`--max-count=${maxCount}`);\n    }\n    if (opt.from && opt.to) {\n        const rangeOperator = (opt.symmetric !== false) ? '...' : '..';\n        suffix.push(`${opt.from}${rangeOperator}${opt.to}`);\n    }\n    if (opt.file) {\n        suffix.push('--follow', opt.file);\n    }\n    utils_1.appendTaskOptions(userOptions(opt), command);\n    return {\n        fields,\n        splitter,\n        commands: [\n            ...command,\n            ...suffix,\n        ],\n    };\n}\nexports.parseLogOptions = parseLogOptions;\nfunction logTask(splitter, fields, customArgs) {\n    return {\n        commands: ['log', ...customArgs],\n        format: 'utf-8',\n        parser: parse_list_log_summary_1.createListLogSummaryParser(splitter, fields),\n    };\n}\nexports.logTask = logTask;\n//# sourceMappingURL=log.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mergeTask = void 0;\nconst git_response_error_1 = require(\"../errors/git-response-error\");\nconst parse_merge_1 = require(\"../parsers/parse-merge\");\nconst task_1 = require(\"./task\");\nfunction mergeTask(customArgs) {\n    if (!customArgs.length) {\n        return task_1.configurationErrorTask('Git.merge requires at least one option');\n    }\n    return {\n        commands: ['merge', ...customArgs],\n        format: 'utf-8',\n        parser(stdOut, stdErr) {\n            const merge = parse_merge_1.parseMergeResult(stdOut, stdErr);\n            if (merge.failed) {\n                throw new git_response_error_1.GitResponseError(merge);\n            }\n            return merge;\n        }\n    };\n}\nexports.mergeTask = mergeTask;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveTask = void 0;\nconst parse_move_1 = require(\"../parsers/parse-move\");\nconst utils_1 = require(\"../utils\");\nfunction moveTask(from, to) {\n    return {\n        commands: ['mv', '-v', ...utils_1.asArray(from), to],\n        format: 'utf-8',\n        parser: parse_move_1.parseMoveResult,\n    };\n}\nexports.moveTask = moveTask;\n//# sourceMappingURL=move.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pullTask = void 0;\nconst parse_pull_1 = require(\"../parsers/parse-pull\");\nfunction pullTask(remote, branch, customArgs) {\n    const commands = ['pull', ...customArgs];\n    if (remote && branch) {\n        commands.splice(1, 0, remote, branch);\n    }\n    return {\n        commands,\n        format: 'utf-8',\n        parser(stdOut, stdErr) {\n            return parse_pull_1.parsePullResult(stdOut, stdErr);\n        }\n    };\n}\nexports.pullTask = pullTask;\n//# sourceMappingURL=pull.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pushTask = exports.pushTagsTask = void 0;\nconst parse_push_1 = require(\"../parsers/parse-push\");\nconst utils_1 = require(\"../utils\");\nfunction pushTagsTask(ref = {}, customArgs) {\n    utils_1.append(customArgs, '--tags');\n    return pushTask(ref, customArgs);\n}\nexports.pushTagsTask = pushTagsTask;\nfunction pushTask(ref = {}, customArgs) {\n    const commands = ['push', ...customArgs];\n    if (ref.branch) {\n        commands.splice(1, 0, ref.branch);\n    }\n    if (ref.remote) {\n        commands.splice(1, 0, ref.remote);\n    }\n    utils_1.remove(commands, '-v');\n    utils_1.append(commands, '--verbose');\n    utils_1.append(commands, '--porcelain');\n    return {\n        commands,\n        format: 'utf-8',\n        parser: parse_push_1.parsePushResult,\n    };\n}\nexports.pushTask = pushTask;\n//# sourceMappingURL=push.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeRemoteTask = exports.remoteTask = exports.listRemotesTask = exports.getRemotesTask = exports.addRemoteTask = void 0;\nconst GetRemoteSummary_1 = require(\"../responses/GetRemoteSummary\");\nconst task_1 = require(\"./task\");\nfunction addRemoteTask(remoteName, remoteRepo, customArgs = []) {\n    return task_1.straightThroughStringTask(['remote', 'add', ...customArgs, remoteName, remoteRepo]);\n}\nexports.addRemoteTask = addRemoteTask;\nfunction getRemotesTask(verbose) {\n    const commands = ['remote'];\n    if (verbose) {\n        commands.push('-v');\n    }\n    return {\n        commands,\n        format: 'utf-8',\n        parser: verbose ? GetRemoteSummary_1.parseGetRemotesVerbose : GetRemoteSummary_1.parseGetRemotes,\n    };\n}\nexports.getRemotesTask = getRemotesTask;\nfunction listRemotesTask(customArgs = []) {\n    const commands = [...customArgs];\n    if (commands[0] !== 'ls-remote') {\n        commands.unshift('ls-remote');\n    }\n    return task_1.straightThroughStringTask(commands);\n}\nexports.listRemotesTask = listRemotesTask;\nfunction remoteTask(customArgs = []) {\n    const commands = [...customArgs];\n    if (commands[0] !== 'remote') {\n        commands.unshift('remote');\n    }\n    return task_1.straightThroughStringTask(commands);\n}\nexports.remoteTask = remoteTask;\nfunction removeRemoteTask(remoteName) {\n    return task_1.straightThroughStringTask(['remote', 'remove', remoteName]);\n}\nexports.removeRemoteTask = removeRemoteTask;\n//# sourceMappingURL=remote.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResetMode = exports.resetTask = exports.ResetMode = void 0;\nconst task_1 = require(\"./task\");\nvar ResetMode;\n(function (ResetMode) {\n    ResetMode[\"MIXED\"] = \"mixed\";\n    ResetMode[\"SOFT\"] = \"soft\";\n    ResetMode[\"HARD\"] = \"hard\";\n    ResetMode[\"MERGE\"] = \"merge\";\n    ResetMode[\"KEEP\"] = \"keep\";\n})(ResetMode = exports.ResetMode || (exports.ResetMode = {}));\nconst ResetModes = Array.from(Object.values(ResetMode));\nfunction resetTask(mode, customArgs) {\n    const commands = ['reset'];\n    if (isValidResetMode(mode)) {\n        commands.push(`--${mode}`);\n    }\n    commands.push(...customArgs);\n    return task_1.straightThroughStringTask(commands);\n}\nexports.resetTask = resetTask;\nfunction getResetMode(mode) {\n    if (isValidResetMode(mode)) {\n        return mode;\n    }\n    switch (typeof mode) {\n        case 'string':\n        case 'undefined':\n            return ResetMode.SOFT;\n    }\n    return;\n}\nexports.getResetMode = getResetMode;\nfunction isValidResetMode(mode) {\n    return ResetModes.includes(mode);\n}\n//# sourceMappingURL=reset.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stashListTask = void 0;\nconst parse_list_log_summary_1 = require(\"../parsers/parse-list-log-summary\");\nconst log_1 = require(\"./log\");\nfunction stashListTask(opt = {}, customArgs) {\n    const options = log_1.parseLogOptions(opt);\n    const parser = parse_list_log_summary_1.createListLogSummaryParser(options.splitter, options.fields);\n    return {\n        commands: ['stash', 'list', ...options.commands, ...customArgs],\n        format: 'utf-8',\n        parser,\n    };\n}\nexports.stashListTask = stashListTask;\n//# sourceMappingURL=stash-list.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.statusTask = void 0;\nconst StatusSummary_1 = require(\"../responses/StatusSummary\");\nfunction statusTask(customArgs) {\n    return {\n        format: 'utf-8',\n        commands: ['status', '--porcelain', '-b', '-u', ...customArgs],\n        parser(text) {\n            return StatusSummary_1.parseStatusSummary(text);\n        }\n    };\n}\nexports.statusTask = statusTask;\n//# sourceMappingURL=status.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateSubModuleTask = exports.subModuleTask = exports.initSubModuleTask = exports.addSubModuleTask = void 0;\nconst task_1 = require(\"./task\");\nfunction addSubModuleTask(repo, path) {\n    return subModuleTask(['add', repo, path]);\n}\nexports.addSubModuleTask = addSubModuleTask;\nfunction initSubModuleTask(customArgs) {\n    return subModuleTask(['init', ...customArgs]);\n}\nexports.initSubModuleTask = initSubModuleTask;\nfunction subModuleTask(customArgs) {\n    const commands = [...customArgs];\n    if (commands[0] !== 'submodule') {\n        commands.unshift('submodule');\n    }\n    return task_1.straightThroughStringTask(commands);\n}\nexports.subModuleTask = subModuleTask;\nfunction updateSubModuleTask(customArgs) {\n    return subModuleTask(['update', ...customArgs]);\n}\nexports.updateSubModuleTask = updateSubModuleTask;\n//# sourceMappingURL=sub-module.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addAnnotatedTagTask = exports.addTagTask = exports.tagListTask = void 0;\nconst TagList_1 = require(\"../responses/TagList\");\n/**\n * Task used by `git.tags`\n */\nfunction tagListTask(customArgs = []) {\n    const hasCustomSort = customArgs.some((option) => /^--sort=/.test(option));\n    return {\n        format: 'utf-8',\n        commands: ['tag', '-l', ...customArgs],\n        parser(text) {\n            return TagList_1.parseTagList(text, hasCustomSort);\n        },\n    };\n}\nexports.tagListTask = tagListTask;\n/**\n * Task used by `git.addTag`\n */\nfunction addTagTask(name) {\n    return {\n        format: 'utf-8',\n        commands: ['tag', name],\n        parser() {\n            return { name };\n        }\n    };\n}\nexports.addTagTask = addTagTask;\n/**\n * Task used by `git.addTag`\n */\nfunction addAnnotatedTagTask(name, tagMessage) {\n    return {\n        format: 'utf-8',\n        commands: ['tag', '-a', '-m', tagMessage, name],\n        parser() {\n            return { name };\n        }\n    };\n}\nexports.addAnnotatedTagTask = addAnnotatedTagTask;\n//# sourceMappingURL=tag.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyTask = exports.isBufferTask = exports.straightThroughBufferTask = exports.straightThroughStringTask = exports.configurationErrorTask = exports.adhocExecTask = exports.EMPTY_COMMANDS = void 0;\nconst task_configuration_error_1 = require(\"../errors/task-configuration-error\");\nexports.EMPTY_COMMANDS = [];\nfunction adhocExecTask(parser) {\n    return {\n        commands: exports.EMPTY_COMMANDS,\n        format: 'utf-8',\n        parser,\n    };\n}\nexports.adhocExecTask = adhocExecTask;\nfunction configurationErrorTask(error) {\n    return {\n        commands: exports.EMPTY_COMMANDS,\n        format: 'utf-8',\n        parser() {\n            throw typeof error === 'string' ? new task_configuration_error_1.TaskConfigurationError(error) : error;\n        }\n    };\n}\nexports.configurationErrorTask = configurationErrorTask;\nfunction straightThroughStringTask(commands, trimmed = false) {\n    return {\n        commands,\n        format: 'utf-8',\n        parser(text) {\n            return trimmed ? String(text).trim() : text;\n        },\n    };\n}\nexports.straightThroughStringTask = straightThroughStringTask;\nfunction straightThroughBufferTask(commands) {\n    return {\n        commands,\n        format: 'buffer',\n        parser(buffer) {\n            return buffer;\n        },\n    };\n}\nexports.straightThroughBufferTask = straightThroughBufferTask;\nfunction isBufferTask(task) {\n    return task.format === 'buffer';\n}\nexports.isBufferTask = isBufferTask;\nfunction isEmptyTask(task) {\n    return !task.commands.length;\n}\nexports.isEmptyTask = isEmptyTask;\n//# sourceMappingURL=task.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterHasLength = exports.filterFunction = exports.filterPlainObject = exports.filterStringOrStringArray = exports.filterStringArray = exports.filterString = exports.filterPrimitives = exports.filterArray = exports.filterType = void 0;\nconst util_1 = require(\"./util\");\nfunction filterType(input, filter, def) {\n    if (filter(input)) {\n        return input;\n    }\n    return (arguments.length > 2) ? def : undefined;\n}\nexports.filterType = filterType;\nconst filterArray = (input) => {\n    return Array.isArray(input);\n};\nexports.filterArray = filterArray;\nfunction filterPrimitives(input, omit) {\n    return /number|string|boolean/.test(typeof input) && (!omit || !omit.includes((typeof input)));\n}\nexports.filterPrimitives = filterPrimitives;\nconst filterString = (input) => {\n    return typeof input === 'string';\n};\nexports.filterString = filterString;\nconst filterStringArray = (input) => {\n    return Array.isArray(input) && input.every(exports.filterString);\n};\nexports.filterStringArray = filterStringArray;\nconst filterStringOrStringArray = (input) => {\n    return exports.filterString(input) || (Array.isArray(input) && input.every(exports.filterString));\n};\nexports.filterStringOrStringArray = filterStringOrStringArray;\nfunction filterPlainObject(input) {\n    return !!input && util_1.objectToString(input) === '[object Object]';\n}\nexports.filterPlainObject = filterPlainObject;\nfunction filterFunction(input) {\n    return typeof input === 'function';\n}\nexports.filterFunction = filterFunction;\nconst filterHasLength = (input) => {\n    if (input == null || 'number|boolean|function'.includes(typeof input)) {\n        return false;\n    }\n    return Array.isArray(input) || typeof input === 'string' || typeof input.length === 'number';\n};\nexports.filterHasLength = filterHasLength;\n//# sourceMappingURL=argument-filters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExitCodes = void 0;\n/**\n * Known process exit codes used by the task parsers to determine whether an error\n * was one they can automatically handle\n */\nvar ExitCodes;\n(function (ExitCodes) {\n    ExitCodes[ExitCodes[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    ExitCodes[ExitCodes[\"ERROR\"] = 1] = \"ERROR\";\n    ExitCodes[ExitCodes[\"UNCLEAN\"] = 128] = \"UNCLEAN\";\n})(ExitCodes = exports.ExitCodes || (exports.ExitCodes = {}));\n//# sourceMappingURL=exit-codes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GitOutputStreams = void 0;\nclass GitOutputStreams {\n    constructor(stdOut, stdErr) {\n        this.stdOut = stdOut;\n        this.stdErr = stdErr;\n    }\n    asStrings() {\n        return new GitOutputStreams(this.stdOut.toString('utf8'), this.stdErr.toString('utf8'));\n    }\n}\nexports.GitOutputStreams = GitOutputStreams;\n//# sourceMappingURL=git-output-streams.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./argument-filters\"), exports);\n__exportStar(require(\"./exit-codes\"), exports);\n__exportStar(require(\"./git-output-streams\"), exports);\n__exportStar(require(\"./line-parser\"), exports);\n__exportStar(require(\"./simple-git-options\"), exports);\n__exportStar(require(\"./task-options\"), exports);\n__exportStar(require(\"./task-parser\"), exports);\n__exportStar(require(\"./util\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoteLineParser = exports.LineParser = void 0;\nclass LineParser {\n    constructor(regExp, useMatches) {\n        this.matches = [];\n        this.parse = (line, target) => {\n            this.resetMatches();\n            if (!this._regExp.every((reg, index) => this.addMatch(reg, index, line(index)))) {\n                return false;\n            }\n            return this.useMatches(target, this.prepareMatches()) !== false;\n        };\n        this._regExp = Array.isArray(regExp) ? regExp : [regExp];\n        if (useMatches) {\n            this.useMatches = useMatches;\n        }\n    }\n    // @ts-ignore\n    useMatches(target, match) {\n        throw new Error(`LineParser:useMatches not implemented`);\n    }\n    resetMatches() {\n        this.matches.length = 0;\n    }\n    prepareMatches() {\n        return this.matches;\n    }\n    addMatch(reg, index, line) {\n        const matched = line && reg.exec(line);\n        if (matched) {\n            this.pushMatch(index, matched);\n        }\n        return !!matched;\n    }\n    pushMatch(_index, matched) {\n        this.matches.push(...matched.slice(1));\n    }\n}\nexports.LineParser = LineParser;\nclass RemoteLineParser extends LineParser {\n    addMatch(reg, index, line) {\n        return /^remote:\\s/.test(String(line)) && super.addMatch(reg, index, line);\n    }\n    pushMatch(index, matched) {\n        if (index > 0 || matched.length > 1) {\n            super.pushMatch(index, matched);\n        }\n    }\n}\nexports.RemoteLineParser = RemoteLineParser;\n//# sourceMappingURL=line-parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createInstanceConfig = void 0;\nconst defaultOptions = {\n    binary: 'git',\n    maxConcurrentProcesses: 5,\n    config: [],\n};\nfunction createInstanceConfig(...options) {\n    const baseDir = process.cwd();\n    const config = Object.assign(Object.assign({ baseDir }, defaultOptions), ...(options.filter(o => typeof o === 'object' && o)));\n    config.baseDir = config.baseDir || baseDir;\n    return config;\n}\nexports.createInstanceConfig = createInstanceConfig;\n//# sourceMappingURL=simple-git-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trailingFunctionArgument = exports.trailingOptionsArgument = exports.getTrailingOptions = exports.appendTaskOptions = void 0;\nconst argument_filters_1 = require(\"./argument-filters\");\nconst util_1 = require(\"./util\");\nfunction appendTaskOptions(options, commands = []) {\n    if (!argument_filters_1.filterPlainObject(options)) {\n        return commands;\n    }\n    return Object.keys(options).reduce((commands, key) => {\n        const value = options[key];\n        if (argument_filters_1.filterPrimitives(value, ['boolean'])) {\n            commands.push(key + '=' + value);\n        }\n        else {\n            commands.push(key);\n        }\n        return commands;\n    }, commands);\n}\nexports.appendTaskOptions = appendTaskOptions;\nfunction getTrailingOptions(args, initialPrimitive = 0, objectOnly = false) {\n    const command = [];\n    for (let i = 0, max = initialPrimitive < 0 ? args.length : initialPrimitive; i < max; i++) {\n        if ('string|number'.includes(typeof args[i])) {\n            command.push(String(args[i]));\n        }\n    }\n    appendTaskOptions(trailingOptionsArgument(args), command);\n    if (!objectOnly) {\n        command.push(...trailingArrayArgument(args));\n    }\n    return command;\n}\nexports.getTrailingOptions = getTrailingOptions;\nfunction trailingArrayArgument(args) {\n    const hasTrailingCallback = typeof util_1.last(args) === 'function';\n    return argument_filters_1.filterType(util_1.last(args, hasTrailingCallback ? 1 : 0), argument_filters_1.filterArray, []);\n}\n/**\n * Given any number of arguments, returns the trailing options argument, ignoring a trailing function argument\n * if there is one. When not found, the return value is null.\n */\nfunction trailingOptionsArgument(args) {\n    const hasTrailingCallback = argument_filters_1.filterFunction(util_1.last(args));\n    return argument_filters_1.filterType(util_1.last(args, hasTrailingCallback ? 1 : 0), argument_filters_1.filterPlainObject);\n}\nexports.trailingOptionsArgument = trailingOptionsArgument;\n/**\n * Returns either the source argument when it is a `Function`, or the default\n * `NOOP` function constant\n */\nfunction trailingFunctionArgument(args, includeNoop = true) {\n    const callback = util_1.asFunction(util_1.last(args));\n    return includeNoop || util_1.isUserFunction(callback) ? callback : undefined;\n}\nexports.trailingFunctionArgument = trailingFunctionArgument;\n//# sourceMappingURL=task-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseStringResponse = exports.callTaskParser = void 0;\nconst util_1 = require(\"./util\");\nfunction callTaskParser(parser, streams) {\n    return parser(streams.stdOut, streams.stdErr);\n}\nexports.callTaskParser = callTaskParser;\nfunction parseStringResponse(result, parsers, ...texts) {\n    texts.forEach(text => {\n        for (let lines = util_1.toLinesWithContent(text), i = 0, max = lines.length; i < max; i++) {\n            const line = (offset = 0) => {\n                if ((i + offset) >= max) {\n                    return;\n                }\n                return lines[i + offset];\n            };\n            parsers.some(({ parse }) => parse(line, result));\n        }\n    });\n    return result;\n}\nexports.parseStringResponse = parseStringResponse;\n//# sourceMappingURL=task-parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToString = exports.prefixedArray = exports.asNumber = exports.asStringArray = exports.asArray = exports.objectToString = exports.remove = exports.including = exports.append = exports.folderExists = exports.forEachLineWithContent = exports.toLinesWithContent = exports.last = exports.first = exports.splitOn = exports.isUserFunction = exports.asFunction = exports.NOOP = void 0;\nconst file_exists_1 = require(\"@kwsites/file-exists\");\nconst NOOP = () => {\n};\nexports.NOOP = NOOP;\n/**\n * Returns either the source argument when it is a `Function`, or the default\n * `NOOP` function constant\n */\nfunction asFunction(source) {\n    return typeof source === 'function' ? source : exports.NOOP;\n}\nexports.asFunction = asFunction;\n/**\n * Determines whether the supplied argument is both a function, and is not\n * the `NOOP` function.\n */\nfunction isUserFunction(source) {\n    return (typeof source === 'function' && source !== exports.NOOP);\n}\nexports.isUserFunction = isUserFunction;\nfunction splitOn(input, char) {\n    const index = input.indexOf(char);\n    if (index <= 0) {\n        return [input, ''];\n    }\n    return [\n        input.substr(0, index),\n        input.substr(index + 1),\n    ];\n}\nexports.splitOn = splitOn;\nfunction first(input, offset = 0) {\n    return isArrayLike(input) && input.length > offset ? input[offset] : undefined;\n}\nexports.first = first;\nfunction last(input, offset = 0) {\n    if (isArrayLike(input) && input.length > offset) {\n        return input[input.length - 1 - offset];\n    }\n}\nexports.last = last;\nfunction isArrayLike(input) {\n    return !!(input && typeof input.length === 'number');\n}\nfunction toLinesWithContent(input, trimmed = true, separator = '\\n') {\n    return input.split(separator)\n        .reduce((output, line) => {\n        const lineContent = trimmed ? line.trim() : line;\n        if (lineContent) {\n            output.push(lineContent);\n        }\n        return output;\n    }, []);\n}\nexports.toLinesWithContent = toLinesWithContent;\nfunction forEachLineWithContent(input, callback) {\n    return toLinesWithContent(input, true).map(line => callback(line));\n}\nexports.forEachLineWithContent = forEachLineWithContent;\nfunction folderExists(path) {\n    return file_exists_1.exists(path, file_exists_1.FOLDER);\n}\nexports.folderExists = folderExists;\n/**\n * Adds `item` into the `target` `Array` or `Set` when it is not already present and returns the `item`.\n */\nfunction append(target, item) {\n    if (Array.isArray(target)) {\n        if (!target.includes(item)) {\n            target.push(item);\n        }\n    }\n    else {\n        target.add(item);\n    }\n    return item;\n}\nexports.append = append;\n/**\n * Adds `item` into the `target` `Array` when it is not already present and returns the `target`.\n */\nfunction including(target, item) {\n    if (Array.isArray(target) && !target.includes(item)) {\n        target.push(item);\n    }\n    return target;\n}\nexports.including = including;\nfunction remove(target, item) {\n    if (Array.isArray(target)) {\n        const index = target.indexOf(item);\n        if (index >= 0) {\n            target.splice(index, 1);\n        }\n    }\n    else {\n        target.delete(item);\n    }\n    return item;\n}\nexports.remove = remove;\nexports.objectToString = Object.prototype.toString.call.bind(Object.prototype.toString);\nfunction asArray(source) {\n    return Array.isArray(source) ? source : [source];\n}\nexports.asArray = asArray;\nfunction asStringArray(source) {\n    return asArray(source).map(String);\n}\nexports.asStringArray = asStringArray;\nfunction asNumber(source, onNaN = 0) {\n    if (source == null) {\n        return onNaN;\n    }\n    const num = parseInt(source, 10);\n    return isNaN(num) ? onNaN : num;\n}\nexports.asNumber = asNumber;\nfunction prefixedArray(input, prefix) {\n    const output = [];\n    for (let i = 0, max = input.length; i < max; i++) {\n        output.push(prefix, input[i]);\n    }\n    return output;\n}\nexports.prefixedArray = prefixedArray;\nfunction bufferToString(input) {\n    return (Array.isArray(input) ? Buffer.concat(input) : input).toString('utf-8');\n}\nexports.bufferToString = bufferToString;\n//# sourceMappingURL=util.js.map","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","module.exports = require(\"child_process\");;","module.exports = require(\"fs\");;","module.exports = require(\"os\");;","module.exports = require(\"path\");;","module.exports = require(\"tty\");;","module.exports = require(\"util\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n__webpack_require__.ab = __dirname + \"/\";","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(3109);\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvtxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC/UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACnxfhSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACRA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACxBA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AChBA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AClCA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACPA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACXA;AACA;AACA;AACA;AACA;A;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACxvLA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;ACzjtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7CA;AACA;AACA;AACA;A;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACzpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;ACxtxaA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;;;ACDA;AACA;A;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;ACDA;AACA;AACA;AACA;;A","sourceRoot":""}